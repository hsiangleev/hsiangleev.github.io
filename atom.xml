<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>李祥的网络日志</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hsianglee.cn/"/>
  <updated>2021-01-28T01:10:13.907Z</updated>
  <id>https://hsianglee.cn/</id>
  
  <author>
    <name>hsianglee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>暮色沉沉</title>
    <link href="https://hsianglee.cn/2021/01/28/essay/%E6%9A%AE%E8%89%B2%E6%B2%89%E6%B2%89/"/>
    <id>https://hsianglee.cn/2021/01/28/essay/暮色沉沉/</id>
    <published>2021-01-28T01:00:26.000Z</published>
    <updated>2021-01-28T01:10:13.907Z</updated>
    
    <content type="html"><![CDATA[<div style="text-align:center">暮色沉沉，灯火昏昏</div><br><div style="text-align:center">车鸣阵阵，前路森森</div><br><div style="text-align:center">冷风凛凛，薄衣紧紧</div><br><div style="text-align:center">薄酒温温，心甚岑岑</div><br><div style="text-align:center">日复恳恳，虽有愤愤</div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div style=&quot;text-align:center&quot;&gt;暮色沉沉，灯火昏昏&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;text-align:center&quot;&gt;车鸣阵阵，前路森森&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;text-align:center&quot;&gt;冷风凛凛，薄衣紧紧
      
    
    </summary>
    
      <category term="兮词" scheme="https://hsianglee.cn/categories/%E5%85%AE%E8%AF%8D/"/>
    
    
      <category term="兮词" scheme="https://hsianglee.cn/tags/%E5%85%AE%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>基于vite+elementPlus实现后台管理系统</title>
    <link href="https://hsianglee.cn/2020/12/11/vuejs/%E5%9F%BA%E4%BA%8Evite+elementPlus%E5%AE%9E%E7%8E%B0%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <id>https://hsianglee.cn/2020/12/11/vuejs/基于vite+elementPlus实现后台管理系统/</id>
    <published>2020-12-11T09:52:10.000Z</published>
    <updated>2020-12-16T09:07:42.368Z</updated>
    
    <content type="html"><![CDATA[<h2 id="通过vite新建项目"><a href="#通过vite新建项目" class="headerlink" title="通过vite新建项目"></a>通过vite新建项目</h2><ol><li>创建项目名称为element-plus-admin的项目 <code>npm init vite-app element-plus-admin</code></li><li>进入项目 <code>cd element-plus-admin</code></li><li>安装依赖 <code>npm install</code></li><li>运行项目 <code>npm run dev</code></li><li>然后浏览器访问<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a>便可以看到项目了</li></ol><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><ol><li>引入vue-router-next <code>npm install vue-router@4 -D</code></li><li>引入vuex <code>npm install vuex@next -D</code></li><li>引入element-plus <code>npm install element-plus -D</code></li><li>引入typescript并且使用eslint检查代码 <code>npm install eslint typescript @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint-plugin-vue -D</code></li></ol><h2 id="使用typescript改写项目"><a href="#使用typescript改写项目" class="headerlink" title="使用typescript改写项目"></a>使用typescript改写项目</h2><ol><li>index.html<code>&lt;script type=&quot;module&quot; src=&quot;/src/main.js&quot;&gt;&lt;/script&gt;</code>中的js写为ts</li><li>src/main.js文件名改为main.ts</li><li><p>打开/src/main.ts会发现<code>&#39;./App.vue&#39;</code>报错，新建文件src/shims-vue.d.ts</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="built_in">module</span> <span class="string">'*.vue'</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">    <span class="keyword">const</span> Component: ReturnType&lt;<span class="keyword">typeof</span> defineComponent&gt;</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> Component</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>发现还是报错，需要添加typescript配置，在主目录新建tsconfig.json，添加下面代码就可以了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"outDir"</span>: <span class="string">"./dist/"</span>,</span><br><span class="line">        <span class="string">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line">        <span class="string">"target"</span>: <span class="string">"ESNext"</span>,</span><br><span class="line">        <span class="string">"baseUrl"</span>: <span class="string">"."</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"include"</span>: [</span><br><span class="line">        <span class="string">"./src/**/*"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="eslint配置"><a href="#eslint配置" class="headerlink" title="eslint配置"></a>eslint配置</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建.eslintrc.js</span></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    parser: <span class="string">'vue-eslint-parser'</span>,</span><br><span class="line">    parserOptions: &#123;</span><br><span class="line">        parser: <span class="string">'@typescript-eslint/parser'</span>,</span><br><span class="line">        sourceType: <span class="string">'module'</span>,</span><br><span class="line">        ecmaFeatures: &#123;</span><br><span class="line">            jsx: <span class="literal">true</span>,</span><br><span class="line">            tsx: <span class="literal">true</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    env: &#123;</span><br><span class="line">        browser: <span class="literal">true</span>,</span><br><span class="line">        node: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="string">'@typescript-eslint'</span>,</span><br><span class="line">    ],</span><br><span class="line">    extends: [</span><br><span class="line">        <span class="string">'plugin:@typescript-eslint/recommended'</span>,</span><br><span class="line">        <span class="string">'plugin:vue/vue3-recommended'</span>,</span><br><span class="line">    ],</span><br><span class="line">    rules: &#123;</span><br><span class="line">        <span class="string">'vue/html-indent'</span>: [<span class="string">'error'</span>, <span class="number">4</span>],</span><br><span class="line">        indent: [<span class="string">'error'</span>, <span class="number">4</span>],                                 <span class="comment">// 4行缩进</span></span><br><span class="line">        <span class="string">'vue/script-indent'</span>: [<span class="string">'error'</span>, <span class="number">4</span>],</span><br><span class="line">        quotes: [<span class="string">'error'</span>, <span class="string">'single'</span>],                          <span class="comment">// 单引号</span></span><br><span class="line">        <span class="string">'vue/html-quotes'</span>: [<span class="string">'error'</span>, <span class="string">'single'</span>],</span><br><span class="line">        semi: [<span class="string">'error'</span>, <span class="string">'never'</span>],                             <span class="comment">// 禁止使用分号</span></span><br><span class="line">        <span class="string">'space-infix-ops'</span>: [<span class="string">'error'</span>, &#123; <span class="attr">int32Hint</span>: <span class="literal">false</span> &#125;],     <span class="comment">// 要求操作符周围有空格</span></span><br><span class="line">        <span class="string">'no-var'</span>: <span class="string">'error'</span>,</span><br><span class="line">        <span class="string">'prefer-destructuring'</span>: [<span class="string">'error'</span>, &#123;                     <span class="comment">// 优先使用数组和对象解构</span></span><br><span class="line">            array: <span class="literal">true</span>,</span><br><span class="line">            object: <span class="literal">true</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            enforceForRenamedProperties: <span class="literal">false</span></span><br><span class="line">        &#125;],</span><br><span class="line">        <span class="string">'no-whitespace-before-property'</span>: <span class="string">'error'</span>,               <span class="comment">// 禁止属性前有空白</span></span><br><span class="line">        <span class="string">'quote-props'</span>: [<span class="string">'error'</span>, <span class="string">'as-needed'</span>],                     <span class="comment">// 对象字面量属性名称使用引号</span></span><br><span class="line">        <span class="string">'object-curly-spacing'</span>: [<span class="string">'error'</span>, <span class="string">'always'</span>],            <span class="comment">// 强制在花括号中使用一致的空格</span></span><br><span class="line">        <span class="string">'no-unneeded-ternary'</span>: <span class="string">'error'</span>,                         <span class="comment">// 禁止可以表达为更简单结构的三元操作符</span></span><br><span class="line">        <span class="string">'no-restricted-syntax'</span>: [<span class="string">'error'</span>, <span class="string">'WithStatement'</span>, <span class="string">'BinaryExpression[operator="in"]'</span>],  <span class="comment">// 禁止with/in语句</span></span><br><span class="line">        <span class="string">'no-lonely-if'</span>: <span class="string">'error'</span>,                <span class="comment">// 禁止 if 语句作为唯一语句出现在 else 语句块中</span></span><br><span class="line">        <span class="string">'newline-per-chained-call'</span>: [<span class="string">'error'</span>, &#123; <span class="attr">ignoreChainWithDepth</span>: <span class="number">2</span> &#125;],       <span class="comment">// 要求方法链中每个调用都有一个换行符</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vite配置项"><a href="#vite配置项" class="headerlink" title="vite配置项"></a>vite配置项</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新建vite.config.ts</span></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">'path'</span></span><br><span class="line"><span class="keyword">import</span> &#123; UserConfig &#125; <span class="keyword">from</span> <span class="string">'vite'</span></span><br><span class="line"><span class="keyword">const</span> config:UserConfig = &#123;</span><br><span class="line">    assetsDir: <span class="string">'public'</span>,        <span class="comment">// 修改静态文件存放的目录名</span></span><br><span class="line">    proxy: &#123;                    <span class="comment">// 配置代理地址</span></span><br><span class="line">        <span class="string">'/api'</span>: &#123;</span><br><span class="line">            target: <span class="string">'http://localhost:3001/'</span>,</span><br><span class="line">            changeOrigin: <span class="literal">true</span>,</span><br><span class="line">            rewrite: <span class="function">(<span class="params">path</span>) =&gt;</span> path.replace(<span class="regexp">/^\/api/</span>, <span class="string">''</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    port: <span class="number">3002</span>,         <span class="comment">// 修改端口</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config</span><br></pre></td></tr></table></figure><h2 id="vue文件模板多个根节点报错"><a href="#vue文件模板多个根节点报错" class="headerlink" title="vue文件模板多个根节点报错"></a>vue文件模板多个根节点报错</h2><ol><li>vue3单文件已经支持多个根节点，如果报错，应该是vetur插件的问题</li><li>点击左上角 文件=》首选项=》设置，搜索<code>vetur.validation.template</code>，把前面的对号点掉</li></ol><h2 id="别名设置"><a href="#别名设置" class="headerlink" title="别名设置"></a>别名设置</h2><p><strong>需要修改3个地方，设置完成之后如果没有成功，需要重启vscode应该就可以了</strong></p><ol><li><p>修改vite.config.ts的配置，注意别名必须以 <strong>/</strong> 开头和结尾</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alias: &#123;</span><br><span class="line">    <span class="string">'/@/'</span>: path.resolve(__dirname, <span class="string">'src'</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li><p>修改tsconfig.json的配置，compilerOptions里面添加path参数</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"paths"</span>: &#123;</span><br><span class="line">    <span class="string">"/@/*"</span>: [<span class="string">"src/*"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>修改.eslintrc.js配置，添加两条rules</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'no-submodule-imports'</span>: [<span class="string">'off'</span>, <span class="string">'/@'</span>],</span><br><span class="line"><span class="string">'no-implicit-dependencies'</span>: [<span class="string">'off'</span>, [<span class="string">'/@'</span>]]</span><br></pre></td></tr></table></figure></li></ol><h2 id="vuex中的state属性提示"><a href="#vuex中的state属性提示" class="headerlink" title="vuex中的state属性提示"></a>vuex中的state属性提示</h2><p><strong>直接使用vuex的useStore方法，没有state属性提示，需要改写useStore添加返回类型</strong></p><ol><li><p>在src/store/index.ts中添加代码，给state定义接口</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore, Store, useStore <span class="keyword">as</span> baseUseStore &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">interface</span> IState &#123;</span><br><span class="line">    count: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> state:IState = &#123;</span><br><span class="line">    count: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">    add(state:IState) &#123;</span><br><span class="line">        state.count++</span><br><span class="line">    &#125;,</span><br><span class="line">    sub(state:IState) &#123;</span><br><span class="line">        state.count--</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = createStore&lt;IState&gt;(&#123;</span><br><span class="line">    state,</span><br><span class="line">    mutations</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">useStore</span>(<span class="params"></span>): <span class="title">Store</span>&lt;<span class="title">IState</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> baseUseStore()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>src/main.ts引入vuex(模块引入已经使用上面设置的别名)</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'/@/App.vue'</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'/@/index.css'</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">'/@/vuex/index'</span></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line">app.use(store)</span><br><span class="line">app.mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure></li><li><p>在src/components/HelloWorld.vue中测试，在setup方法中输入<code>store.state.</code>的时候就会出现前面定义的属性</p><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    count is: &#123;&#123; count &#125;&#125;</span><br><span class="line">    &lt;button <span class="meta">@click</span>=<span class="string">'add'</span>&gt;</span><br><span class="line">        增加</span><br><span class="line">    &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button @click='sub'&gt;</span></span><br><span class="line"><span class="regexp">        减少</span></span><br><span class="line"><span class="regexp">    &lt;/</span>button&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script lang="ts"&gt;</span></span><br><span class="line"><span class="regexp">import &#123; defineComponent, toRef &#125; from 'vue'</span></span><br><span class="line"><span class="regexp">import &#123; useStore &#125; from '/</span>@/vuex/index<span class="string">'</span></span><br><span class="line"><span class="string">export default defineComponent(&#123;</span></span><br><span class="line"><span class="string">    name: '</span>HelloWorld<span class="string">',</span></span><br><span class="line"><span class="string">    setup() &#123;</span></span><br><span class="line"><span class="string">        const store = useStore()</span></span><br><span class="line"><span class="string">        const count = toRef(store.state, '</span>count<span class="string">')</span></span><br><span class="line"><span class="string">        const add = () =&gt; store.commit('</span>add<span class="string">')</span></span><br><span class="line"><span class="string">        const sub = () =&gt; store.commit('</span>sub<span class="string">')</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        return &#123;</span></span><br><span class="line"><span class="string">            count,</span></span><br><span class="line"><span class="string">            add,</span></span><br><span class="line"><span class="string">            sub</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="引入axios等插件时报错"><a href="#引入axios等插件时报错" class="headerlink" title="引入axios等插件时报错"></a>引入axios等插件时报错</h2><ol><li>报错信息为: Uncaught SyntaxError: The requested module ‘/@modules/axios/index.js’ does not provide an export named ‘default’</li><li>需要在vite.config.ts配置文件添加<figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">optimizeDeps: &#123;</span><br><span class="line">    include: [<span class="string">'axios'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="更多细节代码就不一一贴了，可以查看仓库代码"><a href="#更多细节代码就不一一贴了，可以查看仓库代码" class="headerlink" title="更多细节代码就不一一贴了，可以查看仓库代码"></a>更多细节代码就不一一贴了，可以查看仓库代码</h2><ol><li><a href="https://github.com/hsiangleev/element-plus-admin" target="_blank" rel="noopener">详细代码</a></li><li><a href="https://element-plus-admin.hsianglee.cn" target="_blank" rel="noopener">示例链接</a></li></ol>]]></content>
    
    <summary type="html">
    
      vue3正式版已经发布一段时间了，elementUI新版本element-plus也已经在测试了，由于我之前没怎么使用过typescript，所以想找一个项目试试手，所以本文通过一个后台管理系统记录vite + elementPlus + typescript踩坑过程
    
    </summary>
    
      <category term="vue" scheme="https://hsianglee.cn/categories/vue/"/>
    
    
      <category term="vue-next" scheme="https://hsianglee.cn/tags/vue-next/"/>
    
      <category term="typescrip" scheme="https://hsianglee.cn/tags/typescrip/"/>
    
      <category term="element-plus" scheme="https://hsianglee.cn/tags/element-plus/"/>
    
      <category term="vite" scheme="https://hsianglee.cn/tags/vite/"/>
    
  </entry>
  
  <entry>
    <title>使用powershell制作http请求界面工具</title>
    <link href="https://hsianglee.cn/2020/11/21/%E5%B7%A5%E5%85%B7/%E4%BD%BF%E7%94%A8powershell%E5%88%B6%E4%BD%9Chttp%E8%AF%B7%E6%B1%82%E7%95%8C%E9%9D%A2%E5%B7%A5%E5%85%B7/"/>
    <id>https://hsianglee.cn/2020/11/21/工具/使用powershell制作http请求界面工具/</id>
    <published>2020-11-21T09:26:33.000Z</published>
    <updated>2020-11-23T01:52:26.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ol><li>把下面的代码放到后缀名为<code>.ps1</code>的文件中</li><li>右键打开，打开方式为<code>Windows PowerShell</code></li><li>打开之后界面如下图：<img data-original="/images/使用powershell制作http请求界面工具/1.png" class="lazy" style="margin:0 auto" alt="使用powershell制作http请求界面工具"></li><li>参数格式说明：<ul><li>header: 请求头，以换行符分割每一条</li><li>cookie: 以<code>;</code>分割，如<code>a=aaa;b=bbb</code></li><li>content: 请求内容，如果contentType选的为json，则为<code>json</code>格式，如<code>{&quot;a&quot;:&quot;aaa&quot;,&quot;b&quot;:&quot;bbb&quot;}</code>, 如果contentType选的为<code>x-www-form-urlencoded</code>,则为form结构，如<code>a=aaa&amp;b=bbb</code></li></ul></li><li>请求示例如下图：<img data-original="/images/使用powershell制作http请求界面工具/2.png" class="lazy" style="margin:0 auto" alt="使用powershell制作http请求界面工具"></li></ol><h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用powershell运行程序，并隐藏窗口</span></span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-Name</span> Window <span class="literal">-Namespace</span> Console <span class="literal">-MemberDefinition</span> <span class="string">'</span></span><br><span class="line"><span class="string">[DllImport("Kernel32.dll")]</span></span><br><span class="line"><span class="string">public static extern IntPtr GetConsoleWindow();</span></span><br><span class="line"><span class="string">[DllImport("user32.dll")]</span></span><br><span class="line"><span class="string">public static extern bool ShowWindow(IntPtr hWnd, Int32 nCmdShow);</span></span><br><span class="line"><span class="string">'</span></span><br><span class="line"><span class="variable">$consolePtr</span> = [<span class="type">Console.Window</span>]::GetConsoleWindow()</span><br><span class="line">[<span class="type">Console.Window</span>]::ShowWindow(<span class="variable">$consolePtr</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-AssemblyName</span> System.Windows.Forms</span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-AssemblyName</span> System.Drawing</span><br><span class="line"><span class="built_in">Add-Type</span> <span class="literal">-AssemblyName</span> System.Web</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发送请求</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ajax</span> <span class="params">(<span class="variable">$options</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$agent</span> = <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.83 Safari/537.36 Edg/85.0.564.44'</span></span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$options</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable">$type</span> = <span class="variable">$options</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="variable">$contentType</span> = <span class="variable">$options</span>[<span class="number">2</span>]</span><br><span class="line">    <span class="variable">$cookie</span> = <span class="variable">$options</span>[<span class="number">3</span>]</span><br><span class="line">    <span class="variable">$body</span> = <span class="variable">$options</span>[<span class="number">4</span>]</span><br><span class="line">    <span class="variable">$headers</span> = <span class="variable">$options</span>[<span class="number">5</span>]</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getCookie</span> <span class="params">(<span class="variable">$cookie</span>)</span></span> &#123;</span><br><span class="line">        <span class="variable">$session</span> = <span class="built_in">New-Object</span> Microsoft.PowerShell.Commands.WebRequestSession</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$cookie</span> <span class="operator">-eq</span> <span class="string">""</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$session</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$a</span> <span class="keyword">in</span> <span class="variable">$cookie</span>.split(<span class="string">";"</span>))&#123;</span><br><span class="line">            <span class="variable">$cookie</span> = <span class="built_in">New-Object</span> System.Net.Cookie</span><br><span class="line">            <span class="variable">$arr</span> = <span class="variable">$a</span>.split(<span class="string">"="</span>)</span><br><span class="line">            <span class="variable">$cookie</span>.Name = <span class="variable">$arr</span>[<span class="number">0</span>].Replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="variable">$cookie</span>.Value = <span class="variable">$arr</span>[<span class="number">1</span>]</span><br><span class="line">            <span class="variable">$cookie</span>.Domain = ([<span class="type">uri</span>]<span class="variable">$url</span>).Host</span><br><span class="line">            <span class="variable">$session</span>.Cookies.Add(<span class="variable">$cookie</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$session</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$session</span> = getCookie(<span class="variable">$cookie</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$type</span> <span class="operator">-eq</span> <span class="string">'GET'</span>)&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> <span class="variable">$url</span> <span class="literal">-Method</span> <span class="string">'GET'</span> <span class="literal">-WebSession</span> <span class="variable">$session</span> <span class="literal">-UserAgent</span> <span class="variable">$agent</span> <span class="literal">-Headers</span> <span class="variable">$headers</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> <span class="variable">$url</span> <span class="literal">-ContentType</span> <span class="variable">$contentType</span> <span class="literal">-Method</span> <span class="variable">$type</span> <span class="literal">-Body</span> <span class="variable">$body</span> <span class="literal">-WebSession</span> <span class="variable">$session</span> <span class="literal">-UserAgent</span> <span class="variable">$agent</span> <span class="literal">-Headers</span> <span class="variable">$headers</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 换行形式的格式转哈希表</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">convertHashTable</span> <span class="params">(<span class="variable">$json</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$k</span> = <span class="selector-tag">@</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$json</span> <span class="operator">-ne</span> <span class="string">""</span>)&#123;</span><br><span class="line">        <span class="variable">$json</span> = <span class="variable">$json</span>.split(<span class="string">"`n"</span>)</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span> <span class="operator">-lt</span> <span class="variable">$json</span>.count;<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="variable">$json</span>[<span class="variable">$i</span>].split(<span class="string">":"</span>)</span><br><span class="line">            <span class="variable">$val</span> = <span class="variable">$json</span>[<span class="variable">$i</span>].ToString().Replace(<span class="variable">$arr</span>[<span class="number">0</span>]+<span class="string">":"</span>, <span class="string">""</span>)</span><br><span class="line">            <span class="variable">$k</span>.Add(<span class="variable">$arr</span>[<span class="number">0</span>], <span class="variable">$val</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$k</span>   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 格式化json缩进</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Format-Json</span><span class="params">([Parameter(Mandatory, ValueFromPipeline)</span>][<span class="title">String</span>] $<span class="title">json</span>)</span> &#123;</span><br><span class="line">    <span class="variable">$indent</span> = <span class="number">0</span>;</span><br><span class="line">    (<span class="variable">$json</span> <span class="operator">-Split</span> <span class="string">"`n"</span> | <span class="built_in">ForEach-Object</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_</span> <span class="operator">-match</span> <span class="string">'[\&#125;\]]\s*,?\s*$'</span>) &#123;</span><br><span class="line">            <span class="variable">$indent</span>--</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$line</span> = (<span class="string">'  '</span> * <span class="variable">$indent</span>) + <span class="variable">$</span>(<span class="variable">$_</span>.TrimStart() <span class="operator">-replace</span> <span class="string">'":  (["&#123;[])'</span>, <span class="string">'": $1'</span> <span class="operator">-replace</span> <span class="string">':  '</span>, <span class="string">': '</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_</span> <span class="operator">-match</span> <span class="string">'[\&#123;\[]\s*$'</span>) &#123;</span><br><span class="line">            <span class="variable">$indent</span>++</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$line</span></span><br><span class="line">    &#125;) <span class="operator">-Join</span> <span class="string">"`n"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawLabel</span> <span class="params">(<span class="variable">$options</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$label</span> = <span class="built_in">New-Object</span> System.Windows.Forms.Label</span><br><span class="line">    <span class="variable">$label</span>.Location = <span class="variable">$options</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable">$label</span>.Size = <span class="variable">$options</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="variable">$label</span>.Text = <span class="variable">$options</span>[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$label</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawRichText</span> <span class="params">(<span class="variable">$options</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$RichTextBox</span> = <span class="built_in">New-Object</span> System.Windows.Forms.RichTextBox</span><br><span class="line">    <span class="variable">$RichTextBox</span>.Location = <span class="variable">$options</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable">$RichTextBox</span>.Size = <span class="variable">$options</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$RichTextBox</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawRadioButton</span> <span class="params">(<span class="variable">$options</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$RadioButton</span> = <span class="built_in">New-Object</span> System.Windows.Forms.RadioButton</span><br><span class="line">    <span class="variable">$RadioButton</span>.Location = <span class="variable">$options</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable">$RadioButton</span>.size = <span class="variable">$options</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="variable">$RadioButton</span>.Text = <span class="variable">$options</span>[<span class="number">2</span>]</span><br><span class="line">    <span class="variable">$RadioButton</span>.Checked = <span class="variable">$options</span>[<span class="number">3</span>] </span><br><span class="line">    <span class="variable">$RadioButton</span>.Name = <span class="variable">$options</span>[<span class="number">4</span>] </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$RadioButton</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">drawGroupBox</span> <span class="params">(<span class="variable">$options</span>)</span></span> &#123;</span><br><span class="line">    <span class="variable">$GroupBox</span> = <span class="built_in">New-Object</span> System.Windows.Forms.GroupBox</span><br><span class="line">    <span class="variable">$GroupBox</span>.Location = <span class="variable">$options</span>[<span class="number">0</span>]</span><br><span class="line">    <span class="variable">$GroupBox</span>.size = <span class="variable">$options</span>[<span class="number">1</span>]</span><br><span class="line">    <span class="variable">$GroupBox</span>.text = <span class="variable">$options</span>[<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$GroupBox</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$form</span> = <span class="built_in">New-Object</span> System.Windows.Forms.Form</span><br><span class="line"><span class="variable">$form</span>.Text = <span class="string">'http request'</span></span><br><span class="line"><span class="variable">$form</span>.Size = <span class="string">'1000,600'</span></span><br><span class="line"><span class="variable">$form</span>.StartPosition = <span class="string">'CenterScreen'</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$req</span> = drawGroupBox(<span class="string">'30,15'</span>, <span class="string">'450,500'</span>, <span class="string">"request"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># url</span></span><br><span class="line"><span class="variable">$urlLabel</span> = drawLabel(<span class="string">"15,30"</span>, <span class="string">"80,30"</span>, <span class="string">'url'</span>)</span><br><span class="line"><span class="variable">$urlBox</span> = <span class="built_in">New-Object</span> System.Windows.Forms.TextBox</span><br><span class="line"><span class="variable">$urlBox</span>.Location = <span class="string">"120,30"</span></span><br><span class="line"><span class="variable">$urlBox</span>.Size = <span class="string">"300,30"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># methods</span></span><br><span class="line"><span class="variable">$methodLabel</span> = drawLabel(<span class="string">"15,80"</span>, <span class="string">"80,30"</span>, <span class="string">'methods'</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$groupMethods</span> = drawGroupBox(<span class="string">'120,60'</span>, <span class="string">'300,40'</span>, <span class="string">""</span>)</span><br><span class="line"><span class="variable">$methodRadio1</span> = drawRadioButton(<span class="string">'15,10'</span>, <span class="string">'50,20'</span>, <span class="string">"get"</span>, <span class="variable">$true</span>, <span class="string">"methods"</span>)</span><br><span class="line"><span class="variable">$methodRadio2</span> = drawRadioButton(<span class="string">'70,10'</span>, <span class="string">'50,20'</span>, <span class="string">"post"</span>, <span class="variable">$false</span>, <span class="string">"methods"</span>)</span><br><span class="line"><span class="variable">$methodRadio3</span> = drawRadioButton(<span class="string">'135,10'</span>, <span class="string">'50,20'</span>, <span class="string">"put"</span>, <span class="variable">$false</span>, <span class="string">"methods"</span>)</span><br><span class="line"><span class="variable">$methodRadio4</span> = drawRadioButton(<span class="string">'200,10'</span>, <span class="string">'70,20'</span>, <span class="string">"delete"</span>, <span class="variable">$false</span>, <span class="string">"methods"</span>)</span><br><span class="line"><span class="variable">$groupMethods</span>.Controls.AddRange(<span class="selector-tag">@</span>(<span class="variable">$methodRadio1</span>, <span class="variable">$methodRadio2</span>, <span class="variable">$methodRadio3</span>, <span class="variable">$methodRadio4</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># contentType</span></span><br><span class="line"><span class="variable">$contentTypeLabel</span> = drawLabel(<span class="string">"15,120"</span>, <span class="string">"80,30"</span>, <span class="string">'contentType'</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$groupContentType</span> = drawGroupBox(<span class="string">'120,110'</span>, <span class="string">'300,40'</span>, <span class="string">""</span>)</span><br><span class="line"><span class="variable">$contentTypeRadio2</span> = drawRadioButton(<span class="string">'15,10'</span>, <span class="string">'50,20'</span>, <span class="string">"json"</span>, <span class="variable">$true</span>, <span class="string">"contentType"</span>)</span><br><span class="line"><span class="variable">$contentTypeRadio1</span> = drawRadioButton(<span class="string">'70,10'</span>, <span class="string">'150,20'</span>, <span class="string">"x-www-form-urlencoded"</span>, <span class="variable">$false</span>, <span class="string">"contentType"</span>)</span><br><span class="line"><span class="variable">$groupContentType</span>.Controls.AddRange(<span class="selector-tag">@</span>(<span class="variable">$contentTypeRadio1</span>, <span class="variable">$contentTypeRadio2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># header</span></span><br><span class="line"><span class="variable">$headerLabel</span> = drawLabel(<span class="string">"15,160"</span>, <span class="string">"80,30"</span>, <span class="string">'header'</span>)</span><br><span class="line"><span class="variable">$headerBox</span> = drawRichText(<span class="string">"120,160"</span>, <span class="string">"300,60"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># cookie</span></span><br><span class="line"><span class="variable">$cookieLabel</span> = drawLabel(<span class="string">"15,240"</span>, <span class="string">"80,30"</span>, <span class="string">'cookie'</span>)</span><br><span class="line"><span class="variable">$cookieBox</span> = drawRichText(<span class="string">"120,240"</span>, <span class="string">"300,60"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># content</span></span><br><span class="line"><span class="variable">$contentLabel</span> = drawLabel(<span class="string">"15,320"</span>, <span class="string">"80,30"</span>, <span class="string">'content'</span>)</span><br><span class="line"><span class="variable">$contentBox</span> = drawRichText(<span class="string">"120,320"</span>, <span class="string">"300,120"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># button</span></span><br><span class="line"><span class="variable">$okButton</span> = <span class="built_in">New-Object</span> System.Windows.Forms.Button</span><br><span class="line"><span class="variable">$okButton</span>.Location = <span class="string">"120,460"</span></span><br><span class="line"><span class="variable">$okButton</span>.Size = <span class="string">"75,23"</span></span><br><span class="line"><span class="variable">$okButton</span>.Text = <span class="string">'submit'</span></span><br><span class="line"><span class="variable">$req</span>.Controls.AddRange(<span class="selector-tag">@</span>(<span class="variable">$urlLabel</span>,<span class="variable">$urlBox</span>,<span class="variable">$methodLabel</span>, <span class="variable">$groupMethods</span>, <span class="variable">$contentTypeLabel</span>, <span class="variable">$groupContentType</span> ,<span class="variable">$cookieLabel</span>,<span class="variable">$cookieBox</span>,<span class="variable">$contentLabel</span>,<span class="variable">$contentBox</span>,<span class="variable">$okButton</span>, <span class="variable">$headerLabel</span>,<span class="variable">$headerBox</span>))</span><br><span class="line"><span class="variable">$form</span>.Controls.Add(<span class="variable">$req</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$okButton</span>.Add_Click(&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$url</span> = <span class="variable">$urlBox</span>.Text</span><br><span class="line">        <span class="variable">$headers</span> = <span class="variable">$headerBox</span>.Text</span><br><span class="line">        <span class="variable">$cookie</span> = <span class="variable">$cookieBox</span>.Text</span><br><span class="line">        <span class="variable">$body</span> = <span class="variable">$contentBox</span>.Text</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$methodRadio1</span>.Checked <span class="operator">-eq</span> <span class="variable">$true</span>)&#123;<span class="variable">$type</span> = <span class="string">"GET"</span>&#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$methodRadio2</span>.Checked <span class="operator">-eq</span> <span class="variable">$true</span>)&#123;<span class="variable">$type</span> = <span class="string">"POST"</span>&#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$methodRadio3</span>.Checked <span class="operator">-eq</span> <span class="variable">$true</span>)&#123;<span class="variable">$type</span> = <span class="string">"PUT"</span>&#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$methodRadio4</span>.Checked <span class="operator">-eq</span> <span class="variable">$true</span>)&#123;<span class="variable">$type</span> = <span class="string">"DELETE"</span>&#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$contentTypeRadio2</span>.Checked <span class="operator">-eq</span> <span class="variable">$true</span>)&#123;<span class="variable">$contentType</span> = <span class="string">"application/json; charset=UTF-8"</span>&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="variable">$contentType</span> = <span class="string">"application/x-www-form-urlencoded; charset=UTF-8"</span>&#125;</span><br><span class="line">        <span class="variable">$headers</span> = convertHashTable(<span class="variable">$headers</span>)</span><br><span class="line"></span><br><span class="line">        <span class="variable">$res</span> = ajax(<span class="variable">$url</span>, <span class="variable">$type</span>, <span class="variable">$contentType</span>, <span class="variable">$cookie</span>, <span class="variable">$body</span>, <span class="variable">$headers</span>)</span><br><span class="line">        <span class="variable">$resHBox</span>.text = <span class="built_in">ConvertTo-Json</span>(<span class="variable">$res</span>.Headers)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> &#123;</span><br><span class="line">        (<span class="built_in">New-Object</span> <span class="literal">-ComObject</span> WScript.Shell).popup(<span class="variable">$PSItem</span>.ToString(),<span class="number">0</span>,<span class="string">"msg"</span>,<span class="number">0</span> + <span class="number">48</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$resContentBox</span>.text = <span class="string">""</span></span><br><span class="line">    <span class="built_in">start-sleep</span> <span class="literal">-Milliseconds</span> <span class="number">500</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$resContentBox</span>.text = <span class="built_in">ConvertFrom-Json</span>(<span class="variable">$res</span>.Content) | <span class="built_in">ConvertTo-Json</span> <span class="literal">-Depth</span> <span class="number">10</span> | <span class="built_in">Format-Json</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="variable">$resContentBox</span>.text = <span class="variable">$res</span>.Content</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># response</span></span><br><span class="line"><span class="variable">$res</span> = drawGroupBox(<span class="string">'500,15'</span>, <span class="string">'450,500'</span>, <span class="string">"response"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># header</span></span><br><span class="line"><span class="variable">$resHLabel</span> = drawLabel(<span class="string">"15,30"</span>, <span class="string">"80,30"</span>, <span class="string">'header'</span>)</span><br><span class="line"><span class="variable">$resHBox</span> = drawRichText(<span class="string">"120,30"</span>, <span class="string">"300,120"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># data</span></span><br><span class="line"><span class="variable">$resContentLabel</span> = drawLabel(<span class="string">"15,180"</span>, <span class="string">"80,30"</span>, <span class="string">'data'</span>)</span><br><span class="line"><span class="variable">$resContentBox</span> = drawRichText(<span class="string">"120,180"</span>, <span class="string">"300,300"</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$res</span>.Controls.AddRange(<span class="selector-tag">@</span>(<span class="variable">$resHLabel</span>,<span class="variable">$resHBox</span>,<span class="variable">$resContentLabel</span>,<span class="variable">$resContentBox</span>))</span><br><span class="line"><span class="variable">$form</span>.Controls.Add(<span class="variable">$res</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># $form.Topmost = $true</span></span><br><span class="line"><span class="comment"># $form.Add_Shown(&#123;$textBox.Select()&#125;)</span></span><br><span class="line"><span class="variable">$form</span>.ShowDialog()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      直接使用powershell程序编写应用窗口，完成http请求，优点是不需要安装任何程序，因为windows10自带powershell
    
    </summary>
    
      <category term="工具" scheme="https://hsianglee.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="powershell" scheme="https://hsianglee.cn/tags/powershell/"/>
    
      <category term="http请求" scheme="https://hsianglee.cn/tags/http%E8%AF%B7%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>基于虚拟dom重写eleTree树组件</title>
    <link href="https://hsianglee.cn/2020/07/08/js/%E5%9F%BA%E4%BA%8E%E8%99%9A%E6%8B%9Fdom%E9%87%8D%E5%86%99eleTree%E6%A0%91%E7%BB%84%E4%BB%B6/"/>
    <id>https://hsianglee.cn/2020/07/08/js/基于虚拟dom重写eleTree树组件/</id>
    <published>2020-07-08T06:23:05.000Z</published>
    <updated>2020-07-08T03:07:22.569Z</updated>
    
    <content type="html"><![CDATA[<p><strong>插件使用webpack构建，整体思路如下：</strong></p><ol><li>build文件夹下为webpack配置目录，包含开发环境和生产环境的配置，即开发环境需要启动本地测试，生产环境直接生成代码，所以入口也不相同，开发环境入口为src/dev/index.js，里面包含测试代码</li><li>src/entry.js为插件入口，包含layui引入和设置全局遍历，通过es6的import引入可以在webpack的配置环境的output参数添加<code>libraryTarget: &#39;umd&#39;</code></li><li>src/index.js为树组件的定义目录，定义了thisTree类，然后通过<code>const eleTree = (opts) =&gt; methods.call(new thisTree(opts))</code>，向外暴漏唯一的变量，这段代码同时包含方法的调用，通过call修改methods对象中的this对象为当前thisTree类的实例</li><li><p>在methods对象中调用不同的方法，再次修改方法中的this为当前thisTree类的实例，方法中的第一个参数为当前methods对象，这个是为了在该方法中返回当前methods对象，通过这个操作可以实现方法的链式调用，方法中的后续参数为调用时传入的参数，部分代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/index.js</span></span><br><span class="line"><span class="keyword">const</span> eleTree = <span class="function">(<span class="params">opts</span>) =&gt;</span> methods.call(<span class="keyword">new</span> thisTree(opts))</span><br><span class="line"><span class="comment">// /src/methods/index.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//函数内部第一个参数为当前methods方法，后续参数为传入的参数，函数内部返回methods方法即可实现链式调用</span></span><br><span class="line">    <span class="keyword">let</span> methods = &#123;</span><br><span class="line">        on: <span class="function">(<span class="params">...args</span>)=&gt;</span>on.call(<span class="keyword">this</span>, methods, ...args),</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> methods</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// /src/methods/其它js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span>(<span class="params">methods, opts = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="keyword">return</span> methods</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>自定义事件的处理</strong>，首先通过methods方法on，获取需要监听的方法，保存到实例的eventList数组里面，然后在需要触发方法的地方执行emit触发相应的方法即可，例如<code>emit.call(thisTree, {v, type: &#39;checkbox&#39;, event})</code>（/src/event/nodeClick.js），emit内部的this依然为当前thisTree类的实例，然后传入不同的参数，on方法中的回调函数便可以使用这些参数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// /src/dev/index.js</span></span><br><span class="line">ele.on(<span class="string">'checkbox'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(data)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// /src/event/customEvent.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">on</span>(<span class="params">methods, type, callback</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 事件保存</span></span><br><span class="line">    <span class="keyword">this</span>.eventList[type] = callback</span><br><span class="line">    <span class="keyword">return</span> methods</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">emit</span>(<span class="params">&#123;v, type, event, otherOpt&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 事件触发</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.eventList[type])&#123;</span><br><span class="line">        <span class="keyword">let</span> data = getCurrentNodeData.call(<span class="keyword">this</span>, v)</span><br><span class="line">        <span class="keyword">this</span>.eventList[type].call(event, <span class="built_in">Object</span>.assign(&#123;&#125;, otherOpt, &#123;data, type&#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>其他文件夹，mock生成后台数据，方便测试，opera包含树的各种方法操作目录，public为公共文件夹，vnode为虚拟dom目录</p></li><li>文档通过vuepress插件构建，代码在/docsBuild文件夹，/docs文件夹为文档生成目录</li></ol><p><a href="https://eletree.hsianglee.cn/" target="_blank" rel="noopener">在线文档</a><br><a href="https://github.com/hsiangleev/eleTree" target="_blank" rel="noopener">github源码</a></p>]]></content>
    
    <summary type="html">
    
      相较于1.0版本，eleTree2.0移除了jquery和layui的依赖，采用snabbdom插件重写树组件；采用webpack的方式，代码结构分离更清晰，并支持直接引入，layui模块引入，和npm的方式引入；采用后渲染的方式，即初始渲染时，只渲染展开的树节点，上万条数据无压力渲染。功能方面移除了节点拖拽功能，使用节点复制粘贴替换，新增单选功能，新增图标自定义功能。
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
      <category term="snabbdom" scheme="https://hsianglee.cn/tags/snabbdom/"/>
    
  </entry>
  
  <entry>
    <title>linux命令笔记</title>
    <link href="https://hsianglee.cn/2020/05/19/linux/linux%E5%91%BD%E4%BB%A4%E7%AC%94%E8%AE%B0/"/>
    <id>https://hsianglee.cn/2020/05/19/linux/linux命令笔记/</id>
    <published>2020-05-19T02:54:26.000Z</published>
    <updated>2020-05-19T02:56:53.467Z</updated>
    
    <content type="html"><![CDATA[<h3 id="linux常用命令"><a href="#linux常用命令" class="headerlink" title="linux常用命令"></a>linux常用命令</h3><h4 id="关机-重启"><a href="#关机-重启" class="headerlink" title="关机/重启"></a>关机/重启</h4><pre><code>* shutdown -r now   # 立即重启（reboot）* shutdown -h now   # 立即关机（poweroff）</code></pre><h4 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h4><ul><li><p>cat: 连接文件并打印到标准输出设备上</p><ol><li>cat 1.txt # 打印文件到控制台</li><li>cat -n 1.txt # 打印文件到控制台并对每一行编号</li><li>cat -b 1.txt # 打印文件到控制台并对每一行编号，不包括空白行</li><li>cat 1.txt &gt; 2.txt # 把1.txt的内容复制到2.txt中</li><li>cat 1.txt &gt;&gt; 2.txt # 把1.txt的内容追加到2.txt中</li><li>cat 1.txt 2.txt &gt; 3.txt # 把1.txt和2.txt的内容复制到3.txt中</li><li>cat null &gt; 3.txt # 清空3.txt</li></ol></li><li><p>chgrp: 变更文件或目录的所属群组</p><ol><li>chgrp -v user 1.txt # 修改1.txt的群组为user</li><li>chgro -v -R user test # 修改test文件夹及其下面所有的文件的群组为user</li><li>chgrp -v –reference=test2 test # 修改test文件夹的群组与test2的群组相同</li></ol></li><li><p>chown: 指定文件的拥有者改为指定的用户或组</p><ol><li>chown user test # 把test文件夹所属用户改为user用户</li><li>chown user:user test # 把test文件夹所属用户改为user用户,所属组设为user组</li><li>chown -R user:user test # 把test文件夹及其下面所有的文件所属用户改为user用户,所属组设为user组</li></ol></li><li><p>cksum: 检测文件是否被改动，确保文件从一个系统传输到另一个系统的过程中不被损坏</p><ol><li>cksum 1.txt # 若文件被改动，则两次输出结果不同</li></ol></li><li><p>cmp: 比较两个文件是否相同（只显示第一次出现不同的位置，一般比较二进制文件）</p><ol><li>cmp 1.txt 2.txt # 如果两个文件相同，则不显示信息，否则显示第一个不同的位置</li></ol></li><li><p>diff: 以逐行的方式，比较文本文件的异同处</p><ol><li>diff 1.txt 2.txt #</li><li>diff 1.txt 2.txt -y # 以并列的方式显示文件的异同之处。</li></ol></li><li><p>file: 查看文件类型</p><ol><li>file 1.js # 1.js: ASCII text</li><li>file -i 1.js # 1.js: text/plain; charset=us-ascii(显示MIME类别)</li></ol></li><li><p>find: 查找文件(find path -option [ -print ] [ -exec -ok command ] {} \;)</p><ol><li>find . -name “*.js” # 查找当前目录下的所有.js的文件</li><li>find . -type f # 查找当前目录所有文件</li><li>find . -type d # 查找当前目录下的所有目录（文件夹）</li><li>find . -name “*.js” -exec ls -l {} \; # 查找当前目录下的所有.js的文件并列出它们的完整路径(-exec参数后面的命令可以操作查找出来之后的结果)</li></ol></li><li><p>ln: 为某一个文件在另外一个位置建立一个同步的链接</p><ol><li>ln -s node/index.js aa/index.js # 在aa文件夹下创建一个软连接，指向node/index.js</li></ol></li><li><p>less: 查看文件（可分页和搜索）less 1.html</p><ol><li>内部快捷键：<ul><li>/post # 向下查找</li><li>?post # 向上查找</li><li>n # 重复前一个搜索，接着查找</li><li>N # 反向重复前一个搜索</li><li>pagedown # 向下翻动一页</li><li>pageup # 向上翻动一页</li><li>-N: # 显示行号</li><li>-m: # 显示百分比</li><li>-i: # 忽略搜索大小写</li></ul></li></ol></li><li><p>mv: 为文件或目录改名、或将文件或目录移入其它位置</p><ol><li>mv 1.js 2.js # 把1.js文件名修改为2.js</li><li>mv 1.js ../node/ # 移动文件</li></ol></li><li><p>paste: 会把每个文件以列对列的方式，一列列地加以合并</p><ol><li>paste 1.txt 2.txt # 按列合并文件（按行合并用cat）</li></ol></li><li><p>rm: 删除一个文件或者目录</p><ol><li>rm -f 1.txt # 删除文件，无需确认</li><li>rm -rf aa # 删除文件夹及其文件，无需确认</li></ol></li><li><p>tee: 读取标准输入的数据，并将其内容输出成文件</p><ol><li>ping baidu.com | tee 1.txt # 把ping的结果实时的存进1.txt文件</li><li>ping baidu.com | tee 1.txt -a # 把ping的结果实时的追加到1.txt文件</li></ol></li><li><p>touch: 修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件</p><ol><li>touch 1.txt # 文件若不存在，则创建，若存在，则修改时间属性为当前系统时间（可用 ls -l 查看）</li><li>touch {1..6}.txt # 创建1.txt, 2.txt, … 6.txt等6个文件</li></ol></li><li><p>cp: 复制文件或目录</p><ol><li>cp ../1.txt . # 复制上一次的1.txt文件到本目录</li><li>cp -r ../aa . # 复制上一次的aa文件夹到本目录</li></ol></li><li><p>文件上传</p><ol><li>yum install -y lrzsz</li><li>rz # 上传</li><li>sz # 下载</li></ol></li></ul><h4 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h4><ul><li>firewall-cmd –query-port=80/tcp # 查询防火墙指定端口是否开启</li><li>firewall-cmd –zone=public –add-port=80/tcp –permanent # 开启防火墙端口（需重新载入）</li><li>firewall-cmd –zone=public –remove-port=80/tcp –permanent # 关闭防火墙端口（需重新载入）</li><li>firewall-cmd –reload # 防火墙重新载入</li><li>systemctl start firewalld # 开启防火墙</li><li>systemctl stop firewalld # 关闭防火墙</li><li>firewall-cmd –state # 查看防火墙状态</li><li>firewall-cmd –list-ports # 查询防火墙已开放的端口</li><li>firewall-cmd –list-all # 查询防火墙信息</li></ul><h4 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h4><ul><li>useradd user # 创建新用户</li><li>passwd user # 设置密码</li><li>userdel user # 删除用户</li><li>su user # 切换用户</li><li>groupadd testgroup # 添加组</li><li>groupdel testgroup # 删除组</li><li>cat /etc/passwd # 查看所有用户</li><li>cat /etc/group # 查看所有组</li></ul><h4 id="发送请求"><a href="#发送请求" class="headerlink" title="发送请求"></a>发送请求</h4><p>curl</p><ul><li>-b [str/url]: 使用cookie字符串或文件用来向服务器发送 Cookie</li><li>-X [type]: 请求类型（POST）</li><li>-o [url]: 抓取内容到一个文件</li><li>-d: 传输数据（-d log=aaaa）</li><li>-x: 代理（-x 24.10.28.84:32779）</li></ul><h4 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h4><ul><li>tar -czvf a.tar.gz a.txt # 压缩a.txt文件(c: create创建, z: gzip压缩, v: 显示压缩的文件信息, f: file压缩文件名)</li><li>tar -tzvf a.tar.gz # 查看压缩包包含哪些文件(t: 不解压查看tar包的内容)</li><li>tar -xzvf a.tar.gz # 解压(x: 解压tar包)</li><li>zip -v a.zip a.txt b.txt # 压缩a.txt和b.txt或者向压缩文件追加(v: 显示压缩信息)</li><li>zip -d a.zip 3.txt # 从压缩包删除文件(d: 删除文件)</li><li>zip -r aa.zip ./aa # 压缩文件夹(r: 压缩目录)</li><li>zip -v a.zip {1..6}.txt -x “3.txt” # 压缩1,2,4,5,6.txt文件(x: 排除文件或文件夹)</li><li>unzip a.zip # 解压到当前目录</li></ul><h4 id="vsftpd（配置文件删除后面的注释及空格）"><a href="#vsftpd（配置文件删除后面的注释及空格）" class="headerlink" title="vsftpd（配置文件删除后面的注释及空格）"></a>vsftpd（配置文件删除后面的注释及空格）</h4><ul><li>yum install vsftpd -y # vsftpd安装</li><li>useradd ftpadmin -s /sbin/nologin # 新建虚拟宿主用户</li><li><p>配置vsftpd的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">listen=YES</span><br><span class="line">listen_ipv6=NO</span><br><span class="line">allow_writeable_chroot=YES  </span><br><span class="line">chroot_list_enable=NO</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">guest_enable=YES            <span class="comment"># 启用虚拟用户</span></span><br><span class="line">guest_username=ftpadmin     <span class="comment"># 虚拟宿主用户名</span></span><br><span class="line">user_config_dir=/etc/vsftpd/user_conf</span><br></pre></td></tr></table></figure></li><li><p>mkdir /etc/vsftpd/user_conf/ # 虚拟用户配置文件存放路径</p></li><li>生成虚拟用户的数据库文件<ol><li>vi /etc/vsftpd/login.txt # 奇数行为用户名，偶数行为密码</li><li>db_load -T -t hash -f /etc/vsftpd/login.txt /etc/vsftpd/vsftpd_login.db # 转换成db文件</li><li>chmod 600 /etc/vsftpd/vsftpd_login.db # 权限设置</li></ol></li><li>生成一个使用vsftpd_login.db数据文件的PAM认证文件<ol><li>vi /etc/pam.d/vsftpd # 注释文件内的所有行，添加下面2，3行</li><li>auth required /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login crypt=hash</li><li>account required /lib64/security/pam_userdb.so db=/etc/vsftpd/vsftpd_login crypt=hash</li></ol></li><li><p>创建虚拟用户的配置文件</p><ol><li>cd /etc/vsftpd/user_conf</li><li>vi test # 新建文件（文件名为虚拟用户表中的名字），并写入下面的权限<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local_root=/home/ftpadmin       <span class="comment"># 访问目录</span></span><br><span class="line">write_enable=YES                <span class="comment"># 写入的权限</span></span><br><span class="line">anon_world_readable_only=NO</span><br><span class="line">anon_upload_enable=YES</span><br><span class="line">anon_mkdir_write_enable=YES</span><br><span class="line">anon_other_write_enable=YES</span><br></pre></td></tr></table></figure></li></ol></li><li><p>systemctl restart vsftpd # 重启服务</p></li></ul><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ul><li>git init # git初始化</li><li>git add 1.js # 添加文件到暂存区</li><li>git add . # 添加当前文件夹的所有文件到暂存区</li><li>git commit -m “…” # 提交到分支</li><li>git commit -a -m “…” # 从工作区直接提交，跳过暂存区</li><li>git commit –amend # 合并上次的提交，即如果提交内容少了，可以用此追加提交</li><li>git rm a.txt # 从暂存区移除文件，并把工作区文件一并删除</li><li>git rm –cached a.txt # 从暂存区移除文件，不删除本地文件</li><li>git clone [url] # 克隆现有项目</li><li>git status -s<ol><li>?? # 尚未添加到暂存区</li><li><em>M # 工作区文件修改(</em>表示空格)</li><li>M_ # 暂存区文件修改</li><li>A_ # 新添加到暂存区</li><li>_D # 工作区文件删除</li><li>_R # 工作区文件重命名</li></ol></li><li>git mv a.txt b.txt # 暂存区和工作区文件重命名(相当于以下三条命令)<ol><li>mv a.txt b.txt</li><li>git rm a.txt</li><li>git add b.txt</li></ol></li><li>git log # 查看提交历史<ol><li>-p # 显示每次提交的差异</li><li>-2 # 仅显示最近两次提交</li><li>–stat # 显示文件提交信息</li><li>–pretty= # 格式化显示信息<ol><li>oneline # 单行显示</li><li>short</li><li>full</li><li>fuller</li><li>format:”%h - $an, %ar : %s”<ol><li>%H # commit完整哈希值</li><li>%h # commit简短哈希值</li><li>%an # 作者名字</li><li>%ae # 作者邮箱</li><li>%ad # 作者修订日期</li><li>%ar # 作者修订日期，按多久之前显示</li><li>%cn # 提交者名字</li><li>%ce # 提交者邮箱</li><li>%cd # 提交者提交日期</li><li>%cr # 提交者提交日期，按多久之前显示</li><li>%s # 提交说明</li></ol></li></ol></li><li>–graph # 显示 ASCII 图形表示的分支合并历史</li><li>–since=2.weeks # 从什么日期(1.years1.days5.minutes 2019-01-12)</li><li>–until # 到什么日期</li><li>-S “aaa” # 查找某次提交记录添加或删除某些字符串的记录</li><li>[path] # 查看某个文件或文件夹的提交记录</li><li>–author= # 仅显示指定作者相关的提交</li></ol></li><li>git reset<ol start="0"><li>设工作区为A，暂存区为B，分支为C</li><li>git reset –soft [HEAD] # 移动分支HEAD到指定位置，不取消暂存（撤销commit命令），只修改C</li><li>git reset [HEAD] # 移动分支HEAD到指定位置，并取消暂存（撤销commit命令和add命令），修改B和C</li><li>git reset –hard [HEAD] # 移动分支HEAD到指定位置，取消暂存，并撤销本地文件的修改，修改ABC（不安全，可能会丢失版本）</li><li>git reset [file] # 取消某个文件暂存（与 git add 相反）</li><li>git reset [HEAD] [file] # 某个文件暂存区重置到指定位置，只修改B（相当于A先重置，再add到B，A再恢复）</li></ol></li><li>git checkout – [file] # 撤销文件修改</li><li>git reflog # 查找之前的记录</li><li>git remote<ol><li>git remote -v # 查看当前关联的远程库（cat .git/config）</li><li>git remote add [pb] [url] # 关联远程库，pb为远程 Git 仓库简写</li><li>git remote show [pb] # 查看某个远程库信息</li><li>git remote rename [opb] [npb] # 改名</li><li>git remote rm [pb] # 移除远程库</li></ol></li><li>git revert -n [HEAD] # 只撤销某一步的修改，然后重新提交</li><li>git diff [<commit-id>] [file] # 比较某文件工作区与暂存区（或指定commit-id）差异<ol><li>–cached/staged [<commit-id>] [file] # 比较某文件暂存区与版本库（或指定commit-id）差异</commit-id></li><li>HEAD [file] # 比较某文件工作区与版本库差异</li><li>git diff [<commit-id>] [<commit-id>] [file] # 比较某文件两个commit-id之间的差异</commit-id></commit-id></li><li>–stat # 不显示详细信息，只显示有多少行被改动</li></ol></commit-id></li></ul><h4 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h4><ul><li>git branch # 查看当前分支<ol><li>[b] # 创建分支</li><li>-d [b] # 删除分支(未合并的分支会删除失败)</li><li>-D [b] # 强制删除分支</li><li>-v # 查看每个分支的最后一次提交</li><li>–merged # 查看哪些分支已经合并到当前分支</li><li>–no-merged # 查看所有包含未合并工作的分支</li></ol></li><li>git checkout<ol><li>[b] # 切换分支</li><li>-b [b] # 创建并切换分支</li></ol></li><li>git merge [b] # 合并某分支到当前分支</li></ul><h4 id="整合分支的修改（合并test分支到master）"><a href="#整合分支的修改（合并test分支到master）" class="headerlink" title="整合分支的修改（合并test分支到master）"></a>整合分支的修改（合并test分支到master）</h4><ol><li>合并分支（git merge test）</li><li>变基（提交历史可能会丢失）<ol><li>git checkout test</li><li>git rebase master</li><li>git checkout master</li><li>git merge test</li></ol></li><li>不同之处：合并分支的历史记录为并行的，变基的历史记录为串行的</li><li>注意：不要对在你的仓库外有副本的分支执行变基</li></ol><h4 id="git远程分支"><a href="#git远程分支" class="headerlink" title="git远程分支"></a>git远程分支</h4><ol><li>当从远程库克隆时，会为你自动将其命名为 origin（git clone -o [test] [url]，可以改为test），拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master（跟踪分支）。</li><li>Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支。</li><li>本地提交的时候master指针移动，但是origin/master指针不会移动<blockquote><p>a=&gt;b=&gt;c=&gt;d=&gt;e # 远程分支，本地在c处克隆，远程继续提交d和e，远程master指向e处<br><br>a=&gt;b=&gt;c # 本地origin/master指向c处，只要不与服务器连接，指针不移动<br><br>a=&gt;b=&gt;c=&gt;f=&gt;g # 本地master分支初始指向c处，继续提交f和g，master指向g处</p></blockquote></li><li>git fetch origin: 获取本地没有的远程库origin数据，移动 origin/master 指针指向新的、更新后的位置<blockquote><p>a=&gt;b=&gt;c=&gt;d=&gt;e # 远程分支，本地在c处克隆，远程继续提交d和e，远程master指向e处<br><br>a=&gt;b=&gt;c=&gt;d=&gt;e # 本地origin/master指针移动到远程origin最新处，指向e<br><br>a=&gt;b=&gt;c=&gt;f=&gt;g # 本地master分支初始指向c处，继续提交f和g，master指向g处</p></blockquote></li><li>git merge origin/master: 合并到当前分支</li><li>git checkout -b newBranch origin/master: 新建分支，并指向跟踪分支的位置（跟踪分支和分支不同的是只有一个指针，不含可编辑的副本）</li><li>git push origin –delete master: 删除远程分支</li></ol><h4 id="git配置自定义服务器"><a href="#git配置自定义服务器" class="headerlink" title="git配置自定义服务器"></a>git配置自定义服务器</h4><ol><li>useradd git # 管理员创建用户</li><li>passwd git # 设置git用户密码</li><li>su git # 切换git用户</li><li>mkdir .ssh</li><li>chmod 700 .ssh</li><li>cd .ssh</li><li>touch authorized_keys # 创建保存公钥的文件</li><li>chmod 600 authorized_keys</li><li>vi authorized_keys # 把公钥写进文件（如果用户的公钥不在文件中，则每次需要输入登录密码）</li><li>cd /home/git # 回到主目录</li><li>git init –bare test.git # 新建空仓库</li><li>本地测试</li><li>git remote add local git@ip:/home/git/test.git # 关联远程库</li><li>git push local master # 本地推送</li></ol><h4 id="GitWeb"><a href="#GitWeb" class="headerlink" title="GitWeb"></a>GitWeb</h4><ol><li>yum install git-instaweb # 安装</li><li>git instaweb -p 3000 # 修改监听端口（先进入仓库所在目录）</li><li>git instaweb –start # 启动服务</li></ol><h4 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h4><h5 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h5><ul><li>gitlab-ctl reconfigure # 重启配置，并启动gitlab服务</li><li>gitlab-ctl start # 启动所有</li><li>gitlab-ctl restart # 重新启动GitLab</li><li>gitlab-ctl stop # 停止所有</li><li>gitlab-ctl status # 查看服务状态</li><li>gitlab-ctl tail # 查看Gitlab日志</li><li>vim /etc/gitlab/gitlab.rb # 修改默认的配置文件</li></ul><h5 id="centos7安装"><a href="#centos7安装" class="headerlink" title="centos7安装"></a>centos7安装</h5><ul><li>yum install -y curl policycoreutils-python openssh-server # 防火墙中打开HTTP，HTTPS和SSH访问</li><li>systemctl enable sshd</li><li>systemctl start sshd</li><li>firewall-cmd –permanent –add-service=http</li><li>firewall-cmd –permanent –add-service=https</li><li>systemctl reload firewalld</li><li>yum install postfix # 邮件服务</li><li>systemctl enable postfix</li><li>systemctl start postfix</li><li>curl https:#packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.rpm.sh | sudo bash # 下载速度慢，可以先下载安装包，用rpm -ivh安装</li><li>EXTERNAL_URL=”https:#gitlab.example.com” yum install -y gitlab-ee</li></ul><h5 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h5><ul><li><p>修改配置文件/etc/gitlab/gitlab.rb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gitlab_rails[<span class="string">'smtp_enable'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_address'</span>] = <span class="string">"smtp.qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_port'</span>] = 465</span><br><span class="line">gitlab_rails[<span class="string">'smtp_user_name'</span>] = <span class="string">"******@qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_password'</span>] = <span class="string">"授权码"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_domain'</span>] = <span class="string">"smtp.qq.com"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_authentication'</span>] = <span class="string">"login"</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_enable_starttls_auto'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'smtp_tls'</span>] = <span class="literal">true</span></span><br><span class="line">gitlab_rails[<span class="string">'gitlab_email_from'</span>] = <span class="string">'******@qq.com'</span></span><br></pre></td></tr></table></figure></li><li><p>gitlab-rails console # 进入控制台</p><ol><li>Notify.test_email(‘收件人邮箱’, ‘title’, ‘body’).deliver_now # 发送邮件测试</li></ol></li></ul><h3 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h3><ol><li>docker rm -f id # 删除镜像</li><li>docker rmi REPOSITORY:TAG # 删除容器</li><li>docker build -t hsiangleev/httptest:v1 . # 构建容器（.为查找当前目录下的Dockerfile）</li><li>docker run -d -p 127.0.0.1:3000:3000 hsiangleev/httptest:v1 # 运行容器</li></ol><h3 id="linux常见错误"><a href="#linux常见错误" class="headerlink" title="linux常见错误"></a>linux常见错误</h3><h4 id="centos7修改网络配置文件"><a href="#centos7修改网络配置文件" class="headerlink" title="centos7修改网络配置文件"></a>centos7修改网络配置文件</h4><ol><li>vi /etc/sysconfig/network-scripts/ifcfg-eth0 修改ONBOOT=yes</li><li>systemctl restart network.service # 重启网络服务</li><li>systemctl status network # 查看网络状态</li></ol><h4 id="安装ifconfig"><a href="#安装ifconfig" class="headerlink" title="安装ifconfig"></a>安装ifconfig</h4><ol><li>yum search ifconfig</li><li>yum install net-tools.x86_64</li></ol><h4 id="centOS-7-network服务重启不了"><a href="#centOS-7-network服务重启不了" class="headerlink" title="centOS 7 network服务重启不了"></a>centOS 7 network服务重启不了</h4><ol><li>执行service network restart，提示<code>Restarting network (via systemctl): Job for network.service failed because the control process exited with error code.See &quot;systemctl status network.service&quot; and &quot;journalctl -xe&quot; for details. [失败]</code></li><li>和 NetworkManager 服务有冲突</li><li>关闭服务service NetworkManager stop</li><li>禁止开机启动 chkconfig NetworkManager off</li><li>网卡重启 service network restart</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;linux常用命令&quot;&gt;&lt;a href=&quot;#linux常用命令&quot; class=&quot;headerlink&quot; title=&quot;linux常用命令&quot;&gt;&lt;/a&gt;linux常用命令&lt;/h3&gt;&lt;h4 id=&quot;关机-重启&quot;&gt;&lt;a href=&quot;#关机-重启&quot; class=&quot;header
      
    
    </summary>
    
      <category term="linux" scheme="https://hsianglee.cn/categories/linux/"/>
    
    
      <category term="linux" scheme="https://hsianglee.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>vue-next先行版+typescript尝试</title>
    <link href="https://hsianglee.cn/2020/04/08/vuejs/vue-next%E5%85%88%E8%A1%8C%E7%89%88+typescript%E5%B0%9D%E8%AF%95/"/>
    <id>https://hsianglee.cn/2020/04/08/vuejs/vue-next先行版+typescript尝试/</id>
    <published>2020-04-08T05:45:56.000Z</published>
    <updated>2020-04-08T06:38:16.041Z</updated>
    
    <content type="html"><![CDATA[<h3 id="获取项目"><a href="#获取项目" class="headerlink" title="获取项目"></a>获取项目</h3><ul><li><code>git clone git@github.com:vuejs/vue-next-webpack-preview.git</code></li><li><code>cd vue-next-webpack-preview</code></li><li><code>npm install</code></li></ul><h3 id="添加typescript依赖"><a href="#添加typescript依赖" class="headerlink" title="添加typescript依赖"></a>添加typescript依赖</h3><ul><li><code>npm install typescript ts-loader --save-dev</code></li></ul><h3 id="修改项目"><a href="#修改项目" class="headerlink" title="修改项目"></a>修改项目</h3><h4 id="1-创建tsconfig-json文件"><a href="#1-创建tsconfig-json文件" class="headerlink" title="1. 创建tsconfig.json文件"></a>1. 创建tsconfig.json文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">        <span class="string">"target"</span>: <span class="string">"ES5"</span>,</span><br><span class="line">        <span class="string">"module"</span>: <span class="string">"CommonJS"</span>,</span><br><span class="line">        <span class="string">"strict"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"importHelpers"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">        <span class="string">"esModuleInterop"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"allowSyntheticDefaultImports"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">"baseUrl"</span>: <span class="string">"."</span>,</span><br><span class="line">        <span class="string">"paths"</span>: &#123;</span><br><span class="line">            <span class="string">"@/*"</span>: [</span><br><span class="line">                <span class="string">"src/*"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"include"</span>: [</span><br><span class="line">        <span class="string">"src/**/*.ts"</span>,</span><br><span class="line">        <span class="string">"src/**/*.vue"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">"exclude"</span>: [</span><br><span class="line">        <span class="string">"node_modules"</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-修改webpack-config-js文件"><a href="#2-修改webpack-config-js文件" class="headerlink" title="2. 修改webpack.config.js文件"></a>2. 修改webpack.config.js文件</h4><ul><li>entry项把<code>path.resolve(__dirname, &#39;./src/main.js&#39;)</code>改为<code>path.resolve(__dirname, &#39;./src/main.ts&#39;)</code></li><li>resolve项添加<code>extensions: [&quot;.ts&quot;, &quot;.js&quot;, &quot;.json&quot;]</code></li><li>rules添加<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.ts$/</span>,</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    loader: <span class="string">"ts-loader"</span>,</span><br><span class="line">    options: &#123;</span><br><span class="line">        appendTsSuffixTo: [<span class="regexp">/\.vue$/</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-src文件夹下修改"><a href="#3-src文件夹下修改" class="headerlink" title="3. src文件夹下修改"></a>3. src文件夹下修改</h4><ul><li>main.js改为main.ts</li><li><p>新建文件shims-vue.d.ts</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare <span class="built_in">module</span> <span class="string">'*.vue'</span> &#123;</span><br><span class="line">    <span class="keyword">import</span> &#123; ComponentOptions &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">    <span class="keyword">const</span> component: ComponentOptions</span><br><span class="line">    <span class="keyword">export</span> <span class="keyword">default</span> component</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>App.vue文件修改</p><ol><li>script添加<code>lang=&quot;ts&quot;</code></li><li>引入模块defineComponent，即<code>import { defineComponent } from &#39;vue&#39;</code></li><li>js代码放到<code>export default defineComponent ({})</code>中</li></ol></li></ul><h3 id="测试项目"><a href="#测试项目" class="headerlink" title="测试项目"></a>测试项目</h3><ul><li><p>新建test.ts的测试文件</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line">interface param &#123;</span><br><span class="line">    count: number;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> test = <span class="function">(<span class="params">param: param</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> count = ref(param.count)</span><br><span class="line">    <span class="keyword">const</span> inc = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        count.value++</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; count, inc &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>App.vue中引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineComponent &#125; <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> &#123; test &#125; <span class="keyword">from</span> <span class="string">'./test'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> defineComponent (&#123;</span><br><span class="line">    setup() &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; count, inc &#125; = test(&#123;<span class="attr">count</span>: <span class="number">3</span>&#125;)</span><br><span class="line">        <span class="keyword">return</span> &#123; count, inc &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>当把<code>test({count: 3})</code>修改为<code>test({count: &quot;&quot;})</code>时，可以看到vscode已经提示报错<img data-original="/images/vue-next先行版+typescript尝试/1.jpg" class="lazy" alt="vue-next先行版+typescript尝试"></p></li></ul>]]></content>
    
    <summary type="html">
    
      vue3先行版已经出来很久了，今天尝试了一下与typescript结合使用，记录下来
    
    </summary>
    
      <category term="vue" scheme="https://hsianglee.cn/categories/vue/"/>
    
    
      <category term="vue-next" scheme="https://hsianglee.cn/tags/vue-next/"/>
    
      <category term="typescrip" scheme="https://hsianglee.cn/tags/typescrip/"/>
    
  </entry>
  
  <entry>
    <title>git常用命令</title>
    <link href="https://hsianglee.cn/2020/01/14/git/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>https://hsianglee.cn/2020/01/14/git/git常用命令/</id>
    <published>2020-01-14T01:33:06.000Z</published>
    <updated>2020-01-14T05:18:51.358Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">git init                  <span class="comment"># git初始化</span></span><br><span class="line">git add 1.js              <span class="comment"># 添加文件到暂存区</span></span><br><span class="line">git add .                 <span class="comment"># 添加当前文件夹的所有文件到暂存区</span></span><br><span class="line">git commit -m <span class="string">"..."</span>       <span class="comment"># 提交到分支</span></span><br><span class="line">git commit -a -m <span class="string">"..."</span>    <span class="comment"># 从工作区直接提交，跳过暂存区</span></span><br><span class="line">git commit --amend        <span class="comment"># 合并上次的提交，即如果提交内容少了，可以用此追加提交</span></span><br><span class="line">git rm a.txt              <span class="comment"># 从暂存区移除文件，并把工作区文件一并删除</span></span><br><span class="line">git rm --cached a.txt     <span class="comment"># 从暂存区移除文件，不删除本地文件</span></span><br><span class="line">git <span class="built_in">clone</span> [url]           <span class="comment"># 克隆现有项目</span></span><br><span class="line">git push [pb] master      <span class="comment"># 推送到远程库pb的master分支</span></span><br><span class="line">git push -f [pb] master   <span class="comment"># 强制推送到远程库pb的master分支</span></span><br><span class="line">git pull [pb] master      <span class="comment"># 从远程库获取并合并到本地分支</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当前版本库状态</span></span><br><span class="line">git status -s</span><br><span class="line">    ??       <span class="comment"># 尚未添加到暂存区</span></span><br><span class="line">    _M       <span class="comment"># 工作区文件修改(_表示空格)</span></span><br><span class="line">    M_       <span class="comment"># 暂存区文件修改</span></span><br><span class="line">    A_       <span class="comment"># 新添加到暂存区</span></span><br><span class="line">    _D       <span class="comment"># 工作区文件删除</span></span><br><span class="line">    _R       <span class="comment"># 工作区文件重命名</span></span><br><span class="line">git mv a.txt b.txt        <span class="comment"># 暂存区和工作区文件重命名(相当于以下三条命令)</span></span><br><span class="line">    mv a.txt b.txt</span><br><span class="line">    git rm a.txt</span><br><span class="line">    git add b.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看提交历史</span></span><br><span class="line">git <span class="built_in">log</span>       </span><br><span class="line">git <span class="built_in">log</span> -p           <span class="comment"># 显示每次提交的差异</span></span><br><span class="line">git <span class="built_in">log</span> -2           <span class="comment"># 仅显示最近两次提交</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span>       <span class="comment"># 显示文件提交信息</span></span><br><span class="line">git <span class="built_in">log</span> --pretty=    <span class="comment"># 格式化显示信息</span></span><br><span class="line">    oneline          <span class="comment"># 单行显示</span></span><br><span class="line">    short</span><br><span class="line">    full</span><br><span class="line">    fuller</span><br><span class="line">    format:<span class="string">"%h - <span class="variable">$an</span>, %ar : %s"</span></span><br><span class="line">        %H       <span class="comment"># commit完整哈希值</span></span><br><span class="line">        %h       <span class="comment"># commit简短哈希值</span></span><br><span class="line">        %an      <span class="comment"># 作者名字</span></span><br><span class="line">        %ae      <span class="comment"># 作者邮箱</span></span><br><span class="line">        %ad      <span class="comment"># 作者修订日期</span></span><br><span class="line">        %ar      <span class="comment"># 作者修订日期，按多久之前显示</span></span><br><span class="line">        %cn      <span class="comment"># 提交者名字</span></span><br><span class="line">        %ce      <span class="comment"># 提交者邮箱</span></span><br><span class="line">        %<span class="built_in">cd</span>      <span class="comment"># 提交者提交日期</span></span><br><span class="line">        %cr      <span class="comment"># 提交者提交日期，按多久之前显示</span></span><br><span class="line">        %s       <span class="comment"># 提交说明</span></span><br><span class="line">git <span class="built_in">log</span> --graph              <span class="comment"># 显示 ASCII 图形表示的分支合并历史</span></span><br><span class="line">git <span class="built_in">log</span> --since=2.weeks      <span class="comment"># 从什么日期(1.years1.days5.minutes  2019-01-12)</span></span><br><span class="line">git <span class="built_in">log</span> --until              <span class="comment"># 到什么日期</span></span><br><span class="line">git <span class="built_in">log</span> -S <span class="string">"aaa"</span>             <span class="comment"># 查找某次提交记录添加或删除某些字符串的记录</span></span><br><span class="line">git <span class="built_in">log</span> [path]               <span class="comment"># 查看某个文件或文件夹的提交记录</span></span><br><span class="line">git <span class="built_in">log</span> --author=            <span class="comment"># 仅显示指定作者相关的提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 版本重置</span></span><br><span class="line">git reset（设工作区为A，暂存区为B，分支为C）</span><br><span class="line">    git reset --soft [HEAD]       <span class="comment"># 移动分支HEAD到指定位置，不取消暂存（撤销commit命令），只修改C</span></span><br><span class="line">    git reset [HEAD]              <span class="comment"># 移动分支HEAD到指定位置，并取消暂存（撤销commit命令和add命令），修改B和C</span></span><br><span class="line">    git reset --hard [HEAD]       <span class="comment"># 移动分支HEAD到指定位置，取消暂存，并撤销本地文件的修改，修改ABC（不安全，可能会丢失版本）</span></span><br><span class="line">    git reset [file]              <span class="comment"># 取消某个文件暂存（与 git add 相反）</span></span><br><span class="line">    git reset [HEAD] [file]       <span class="comment"># 某个文件暂存区重置到指定位置，只修改B（相当于A先重置，再add到B，A再恢复）</span></span><br><span class="line"></span><br><span class="line">git checkout -- [file]            <span class="comment"># 撤销文件修改</span></span><br><span class="line">git reflog                        <span class="comment"># 查找之前的记录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前关联的远程库</span></span><br><span class="line">git remote -v                     <span class="comment"># 查看当前关联的远程库（cat .git/config）</span></span><br><span class="line">git remote add [pb] [url]         <span class="comment"># 关联远程库，pb为远程 Git 仓库简写</span></span><br><span class="line">git remote show [pb]              <span class="comment"># 查看某个远程库信息</span></span><br><span class="line">git remote rename [opb] [npb]     <span class="comment"># 改名</span></span><br><span class="line">git remote rm [pb]                <span class="comment"># 移除远程库</span></span><br></pre></td></tr></table></figure><h3 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看当前分支</span></span><br><span class="line">git branch [b]                     <span class="comment"># 创建分支</span></span><br><span class="line">git branch -d [b]                  <span class="comment"># 删除分支(未合并的分支会删除失败)</span></span><br><span class="line">git branch -D [b]                  <span class="comment"># 强制删除分支</span></span><br><span class="line">git branch -v                      <span class="comment"># 查看每个分支的最后一次提交</span></span><br><span class="line">git branch --merged                <span class="comment"># 查看哪些分支已经合并到当前分支</span></span><br><span class="line">git branch --no-merged             <span class="comment"># 查看所有包含未合并工作的分支</span></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">git checkout [b]                   <span class="comment"># 切换分支</span></span><br><span class="line">git checkout -b [b]                <span class="comment"># 创建并切换分支</span></span><br><span class="line"><span class="comment"># 合并某分支到当前分支</span></span><br><span class="line">git merge [b]                      <span class="comment"># 合并某分支到当前分支</span></span><br></pre></td></tr></table></figure><h3 id="整合分支的修改（合并test分支到master）"><a href="#整合分支的修改（合并test分支到master）" class="headerlink" title="整合分支的修改（合并test分支到master）"></a>整合分支的修改（合并test分支到master）</h3><ol><li>合并分支（git merge test）</li><li><p>变基（提交历史可能会丢失）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git checkout <span class="built_in">test</span></span><br><span class="line">git rebase master</span><br><span class="line">git checkout master</span><br><span class="line">git merge <span class="built_in">test</span></span><br></pre></td></tr></table></figure></li><li><p>不同之处：合并分支的历史记录为并行的，变基的历史记录为串行的</p></li><li>注意：不要对在你的仓库外有副本的分支执行变基</li></ol><h3 id="git远程分支"><a href="#git远程分支" class="headerlink" title="git远程分支"></a>git远程分支</h3><ol><li>当从远程库克隆时，会为你自动将其命名为 origin（git clone -o [test] [url]，可以改为test），拉取它的所有数据，创建一个指向它的 master 分支的指针，并且在本地将其命名为 origin/master（跟踪分支）。</li><li>Git 也会给你一个与 origin 的 master 分支在指向同一个地方的本地 master 分支。</li><li><p>本地提交的时候master指针移动，但是origin/master指针不会移动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=&gt;b=&gt;c=&gt;d=&gt;e           <span class="comment"># 远程分支，本地在c处克隆，远程继续提交d和e，远程master指向e处&lt;/br&gt;</span></span><br><span class="line">a=&gt;b=&gt;c                 <span class="comment"># 本地origin/master指向c处，只要不与服务器连接，指针不移动&lt;/br&gt;</span></span><br><span class="line">a=&gt;b=&gt;c=&gt;f=&gt;g           <span class="comment"># 本地master分支初始指向c处，继续提交f和g，master指向g处</span></span><br></pre></td></tr></table></figure></li><li><p>git fetch origin: 获取本地没有的远程库origin数据，移动 origin/master 指针指向新的、更新后的位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=&gt;b=&gt;c=&gt;d=&gt;e           <span class="comment"># 远程分支，本地在c处克隆，远程继续提交d和e，远程master指向e处&lt;/br&gt;</span></span><br><span class="line">a=&gt;b=&gt;c=&gt;d=&gt;e           <span class="comment"># 本地origin/master指针移动到远程origin最新处，指向e&lt;/br&gt;</span></span><br><span class="line">a=&gt;b=&gt;c=&gt;f=&gt;g           <span class="comment"># 本地master分支初始指向c处，继续提交f和g，master指向g处</span></span><br></pre></td></tr></table></figure></li><li><p>git merge origin/master: 合并到当前分支</p></li><li>git checkout -b newBranch origin/master: 新建分支，并指向跟踪分支的位置（跟踪分支和分支不同的是只有一个指针，不含可编辑的副本）</li><li>git push origin –delete master: 删除远程分支</li></ol><h3 id="git配置自定义服务器"><a href="#git配置自定义服务器" class="headerlink" title="git配置自定义服务器"></a>git配置自定义服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">useradd git                  <span class="comment"># 管理员创建用户</span></span><br><span class="line">passwd git                   <span class="comment"># 设置git用户密码</span></span><br><span class="line">su git                       <span class="comment"># 切换git用户</span></span><br><span class="line">mkdir .ssh                   </span><br><span class="line">chmod 700 .ssh</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line">touch authorized_keys        <span class="comment"># 创建保存公钥的文件</span></span><br><span class="line">chmod 600 authorized_keys    <span class="comment"># 修改权限</span></span><br><span class="line">vi authorized_keys           <span class="comment"># 把公钥写进文件（如果用户的公钥不在文件中，则每次需要输入登录密码）</span></span><br><span class="line"><span class="built_in">cd</span> /home/git                 <span class="comment"># 回到主目录</span></span><br><span class="line">git init --bare test.git     <span class="comment"># 新建空仓库</span></span><br><span class="line"><span class="comment"># 本地测试</span></span><br><span class="line">git remote add <span class="built_in">local</span> git@ip:/home/git/test.git  <span class="comment"># 关联远程库</span></span><br><span class="line">git push <span class="built_in">local</span> master        <span class="comment"># 本地推送</span></span><br></pre></td></tr></table></figure><h3 id="GitWeb"><a href="#GitWeb" class="headerlink" title="GitWeb"></a>GitWeb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install git-instaweb     <span class="comment"># 安装</span></span><br><span class="line">git instaweb -p 3000         <span class="comment"># 修改监听端口（先进入仓库所在目录）</span></span><br><span class="line">git instaweb --start         <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="git" scheme="https://hsianglee.cn/categories/git/"/>
    
    
      <category term="git" scheme="https://hsianglee.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>linux命令之用户与组管理</title>
    <link href="https://hsianglee.cn/2019/12/30/linux/%E7%94%A8%E6%88%B7%E4%B8%8E%E7%BB%84%E7%AE%A1%E7%90%86/"/>
    <id>https://hsianglee.cn/2019/12/30/linux/用户与组管理/</id>
    <published>2019-12-30T05:46:55.000Z</published>
    <updated>2020-01-14T05:25:58.204Z</updated>
    
    <content type="html"><![CDATA[<h3 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h3><ul><li><p>useradd: 添加用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd -g <span class="built_in">test</span> -G groupA,groupB -d /home/<span class="built_in">test</span> <span class="built_in">test</span>       <span class="comment"># 创建一个用户，初始群组为test，并添加到群组groupA和groupB中，创建自家目录/home/test并指定登录目录，用户名为test</span></span><br><span class="line">useradd -d /www -M <span class="built_in">test</span>             <span class="comment"># 不创建用户自家目录，指定登录目录 /www，用户名为test</span></span><br><span class="line">useradd -e <span class="string">"2019-12-30"</span> <span class="built_in">test</span>        <span class="comment"># 添加用户，并给用户设置有效期</span></span><br></pre></td></tr></table></figure></li><li><p>userdel: 删除用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">userdel <span class="built_in">test</span>         <span class="comment"># 删除用户</span></span><br><span class="line">userdel -r <span class="built_in">test</span>      <span class="comment"># 删除用户，并删除用户home目录</span></span><br></pre></td></tr></table></figure></li><li><p>passwd: 修改用户密码<br><code>passwd test # 修改test用户密码</code></p></li><li><p>usermod: 修改用户信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G groupC,groupD <span class="built_in">test</span>     <span class="comment"># test用户添加到groupC,groupD群组，并且不离开其他群组(不加 -a 则离开其他群组)</span></span><br><span class="line">usermod -l test2 <span class="built_in">test</span>                <span class="comment"># 修改test登录名为test2</span></span><br><span class="line">usermod -L <span class="built_in">test</span>                      <span class="comment"># 锁定用户</span></span><br><span class="line">usermod -U <span class="built_in">test</span>                      <span class="comment"># 解除锁定</span></span><br></pre></td></tr></table></figure></li><li><p><code>su user # 切换用户</code></p></li><li><code>cat /etc/passwd # 查看所有用户</code></li><li><code>users # 查看当前有哪些用户登录(w/who)</code></li></ul><h3 id="组管理"><a href="#组管理" class="headerlink" title="组管理"></a>组管理</h3><ul><li><code>groupadd: 添加组</code></li><li><code>groupdel: 删除组</code></li><li><p>groupmems: 组成员管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">groupmems -g groupA -l           <span class="comment"># 显示组groupA中的所有用户</span></span><br><span class="line">groupmems -g groupA -a <span class="built_in">test</span>      <span class="comment"># 把test用户添加到groupA组中</span></span><br><span class="line">groupmems -g groupA -d <span class="built_in">test</span>      <span class="comment"># 删除组groupA中的用户test</span></span><br><span class="line">groupmems -g groupA -p           <span class="comment"># 删除组groupA的所有用户</span></span><br></pre></td></tr></table></figure></li><li><p>groupmod: 修改组<br><code>groupmod groupA -n groupB # 修改组名groupA为groupB</code></p></li><li>groups: 显示用户所在的组<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groups           <span class="comment"># 显示当前用户所在的组</span></span><br><span class="line">groups <span class="built_in">test</span>      <span class="comment"># 显示test用户所在的组</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;用户管理&quot;&gt;&lt;a href=&quot;#用户管理&quot; class=&quot;headerlink&quot; title=&quot;用户管理&quot;&gt;&lt;/a&gt;用户管理&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;useradd: 添加用户&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="linux" scheme="https://hsianglee.cn/categories/linux/"/>
    
    
      <category term="useradd" scheme="https://hsianglee.cn/tags/useradd/"/>
    
      <category term="groupadd" scheme="https://hsianglee.cn/tags/groupadd/"/>
    
  </entry>
  
  <entry>
    <title>uipath studio编辑器介绍与使用</title>
    <link href="https://hsianglee.cn/2019/11/07/uipath/uipath%20studio%E7%BC%96%E8%BE%91%E5%99%A8%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://hsianglee.cn/2019/11/07/uipath/uipath studio编辑器介绍与使用/</id>
    <published>2019-11-07T02:17:15.000Z</published>
    <updated>2019-11-07T03:27:28.745Z</updated>
    
    <content type="html"><![CDATA[<p>打开编辑器默认为英文，可以改为中文，点击<code>settings=&gt;general=&gt;language</code>，选择中文简体，改完之后需要重启编辑器，但是改为中文之后里面所有的activities都会变成中文的，搜索的时候不太好搜，所以我便没有改。</p><p>在start的右边new process下面的process，选择项目名称和路径就可以创建了项目了，编辑器对应的功能如下图<img data-original="/images/uipath studio编辑器介绍与使用/1.png" class="lazy" alt="uipath studio编辑器介绍与使用"></p><p><a href="https://docs.uipath.com/studio/lang-zh_CN/docs" target="_blank" rel="noopener">studio官方文档</a>，所有的活动在文档里面基本都能搜到，列举一些常用的活动：</p><ol><li>Assign: 变量赋值，例如把某个值赋给某个变量</li><li>Click: 鼠标单击操作</li><li>Double Click: 鼠标双击操作</li><li>Type Into: input框输入</li><li>Delay: 延时</li><li>Send HotKey: 键盘按键</li><li>Message Box: 编辑器弹窗，测试使用</li></ol><p>excel相关常用活动：</p><ol><li>Excel Application Scope: 类似一个包装，excel的相关操作都要放到这个里面，需要填写的是excel路径</li><li>Read Range: 读取excel的某个表，输出的数据类型为DataTable类型</li><li>For Each Row: 遍历DataTable类型的数据取值，如row(“表头”)</li><li>Write Range: 数据写入excel</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开编辑器默认为英文，可以改为中文，点击&lt;code&gt;settings=&amp;gt;general=&amp;gt;language&lt;/code&gt;，选择中文简体，改完之后需要重启编辑器，但是改为中文之后里面所有的activities都会变成中文的，搜索的时候不太好搜，所以我便没有改。&lt;/
      
    
    </summary>
    
      <category term="uipath" scheme="https://hsianglee.cn/categories/uipath/"/>
    
    
      <category term="uipath" scheme="https://hsianglee.cn/tags/uipath/"/>
    
  </entry>
  
  <entry>
    <title>uipath下载安装</title>
    <link href="https://hsianglee.cn/2019/11/07/uipath/uipath%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
    <id>https://hsianglee.cn/2019/11/07/uipath/uipath下载安装/</id>
    <published>2019-11-07T01:05:30.000Z</published>
    <updated>2019-11-07T01:50:35.829Z</updated>
    
    <content type="html"><![CDATA[<p>首先是下载软件我便下载了好久，因为我一开始进的是<a href="https://www.uipath.com.cn/" target="_blank" rel="noopener">中文官网</a>，中文官网和英文的好像有些区别，在中文官网点击试用的时候先选择的是社区版本，然后需要填写个人信息包括邮箱地址，软件下载方式发送到邮箱，但是我提交之后一直收不到邮箱，又试了一下企业试用版的也是一样收不到邮箱。</p><p>无奈之下进入<a href="https://www.uipath.com" target="_blank" rel="noopener">英文的网站</a>，，点击Start Trial之后，选择Community版本发现和中文不同的地方是需要登录，然后使用office账户登录之后在这里发现下载地址，<strong><a href="https://download.uipath.com/beta/UiPathStudioSetup.exe" target="_blank" rel="noopener">社区版下载</a></strong><img data-original="/images/uipath下载安装/1.png" class="lazy" alt="uipath下载安装"></p><p>下载完成双击安装，但是没有提示安装的路径，因为需要选择版本，我直接选择社区版，然后选择第一个先行版，然后就直接自动打开了软件，然后用win10的搜索uipath发现除了uipath studio还有一个uipath robot，到这里便安装完成了。</p><p>需要注意的是</p><ol><li>这个下载下来的是64位的软件，无法安装到32位的电脑</li><li>安装的时候需要联网</li><li>电脑的framework版本最低为4.6.1</li><li>软件默认安装到了用户目录，即<code>C:\Users\...\AppData\Local\UiPath</code></li></ol>]]></content>
    
    <summary type="html">
    
      最近接到一个任务是通过程序简化重复录入流程。实际场景为财务需要向系统录入单子，流程是固定的，但是到年底是单子很多，人工录入非常耗时并且容易出错。主管让我看一个名为uipath的机器人流程自动化软件。
    
    </summary>
    
      <category term="uipath" scheme="https://hsianglee.cn/categories/uipath/"/>
    
    
      <category term="uipath" scheme="https://hsianglee.cn/tags/uipath/"/>
    
  </entry>
  
  <entry>
    <title>三省吾身</title>
    <link href="https://hsianglee.cn/2019/08/10/%E9%9A%8F%E7%AC%94/%E4%B8%89%E7%9C%81%E5%90%BE%E8%BA%AB/"/>
    <id>https://hsianglee.cn/2019/08/10/随笔/三省吾身/</id>
    <published>2019-08-10T04:20:03.000Z</published>
    <updated>2019-09-30T08:51:42.661Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">不知道自己为什么会如此恋旧，比如去菜市场买菜，如果连续几天在这家买，今天突然想去另一家了，走过这家小摊时会有一种愧疚感，不敢直视摊主。租房也是如此，与朋友合租不到一年，他走之后我却不想换房，虽然知道一个人住这么大的房子有点奢侈，虽然房间连空调也没有，如果换一个房子的话完全可以租个小点的设施齐全的并且租金也会便宜点，可是终究下不了换的决心，或许也只是因为习惯吧。</p><p style="text-indent:2em">一个人久了会上瘾，虽然心里也会想着需要谈恋爱了，遇到心怡的人也有想撩她的想法，但是每次想到自己是素食者，想到自己挑食如此严重，吃个饭都是件麻烦事也就打消了念头。也曾想过改变，可是恶心反胃之情溢于言表，想想自己终究也只是普通人吧，连吃饭都不能逼迫自己一把。</p><p style="text-indent:2em">人际交往最难，遇到不熟的人可以直接走过不打招呼，遇到很熟悉的人可以追上去喊他，但最怕遇到半熟不熟的人，打招呼也不是，不打招呼也不是，分外尴尬。还有一个性格缺点便是不知道怎么保持友谊，可以一起打游戏的也还好，可以喊他打游戏顺便聊聊近况，其他的如果他不找我我也基本不找他聊，虽然知道这样很不好，但却怕打扰他，不知如何聊，终究越走越远。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;text-indent:2em&quot;&gt;不知道自己为什么会如此恋旧，比如去菜市场买菜，如果连续几天在这家买，今天突然想去另一家了，走过这家小摊时会有一种愧疚感，不敢直视摊主。租房也是如此，与朋友合租不到一年，他走之后我却不想换房，虽然知道一个人住这么大的房子有点奢侈
      
    
    </summary>
    
      <category term="随笔" scheme="https://hsianglee.cn/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="https://hsianglee.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>js replace正则替换</title>
    <link href="https://hsianglee.cn/2019/08/09/js/js%20replace%E6%AD%A3%E5%88%99%E6%9B%BF%E6%8D%A2/"/>
    <id>https://hsianglee.cn/2019/08/09/js/js replace正则替换/</id>
    <published>2019-08-09T02:43:56.000Z</published>
    <updated>2019-08-09T05:48:58.945Z</updated>
    
    <content type="html"><![CDATA[<p>replace() 方法<strong>返回</strong>一个由替换值替换一些或所有匹配的模式后的新字符串。模式可以是一个字符串或者一个正则表达式，替换值可以是一个字符串或者一个每次匹配都要调用的回调函数。</p><p><strong>1. 当第二个参数是字符串时，可以使用特殊变量名</strong></p><table><thead><tr><th>变量名</th><th>代表的值</th></tr></thead><tbody><tr><td>$$</td><td>插入一个 “$”</td></tr><tr><td>$&amp;</td><td>插入匹配的子串</td></tr><tr><td>$`</td><td>插入当前匹配的子串左边的内容</td></tr><tr><td>$’</td><td>插入当前匹配的子串右边的内容</td></tr><tr><td>$n</td><td>假如第一个参数是 RegExp对象，并且 n 是个小于100的非负整数，那么插入第 n 个<strong>括号匹配的字符串</strong></td></tr></tbody></table><p>示例：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"123&#123;&#123;name&#125;&#125;456"</span>;</span><br><span class="line"><span class="comment">// $$值为$</span></span><br><span class="line"><span class="comment">// 当前正则匹配到的值为 &#123;&#123;name&#125;&#125; ，即$&amp;值为&#123;&#123;name&#125;&#125;</span></span><br><span class="line"><span class="comment">// 第一个括号$1匹配的字符串为 &#123;&#123; ，第二个括号$2匹配的字符串为 &#125;&#125;</span></span><br><span class="line"><span class="comment">// 匹配的字符串左侧的内容为 123，即$`值为123</span></span><br><span class="line"><span class="comment">// 匹配的字符串右侧的值为 456 ，即$'值为456</span></span><br><span class="line">str.replace(<span class="regexp">/(\&#123;\&#123;)\w+(\&#125;\&#125;)/</span>,<span class="string">"$1code$2"</span>);      <span class="comment">// 123&#123;&#123;code&#125;&#125;456</span></span><br><span class="line">str.replace(<span class="regexp">/(\&#123;\&#123;)\w+(\&#125;\&#125;)/</span>,<span class="string">"$1co$$de$2"</span>);    <span class="comment">// 123&#123;&#123;co$de&#125;&#125;456</span></span><br><span class="line">str.replace(<span class="regexp">/(\&#123;\&#123;)\w+(\&#125;\&#125;)/</span>,<span class="string">"$1co$&amp;de$2"</span>);    <span class="comment">// 123&#123;&#123;co&#123;&#123;name&#125;&#125;de&#125;&#125;456</span></span><br><span class="line">str.replace(<span class="regexp">/(\&#123;\&#123;)\w+(\&#125;\&#125;)/</span>,<span class="string">"$1co$`de$2"</span>);    <span class="comment">// 123&#123;&#123;co123de&#125;&#125;456</span></span><br><span class="line">str.replace(<span class="regexp">/(\&#123;\&#123;)\w+(\&#125;\&#125;)/</span>,<span class="string">"$1co$'de$2"</span>);    <span class="comment">// 123&#123;&#123;co456de&#125;&#125;456</span></span><br></pre></td></tr></table></figure><p></p><p><strong>2. 第二个参数也可以使用函数，函数的参数含义为：</strong></p><table><thead><tr><th>变量名</th><th>代表的值</th></tr></thead><tbody><tr><td>match</td><td>匹配的子串。（对应于上述的$&amp;。）</td></tr><tr><td>p1,p2,…</td><td>假如replace()方法的第一个参数是一个RegExp 对象，则代表第n个括号匹配的字符串。（对应于上述的$1，$2等。）</td></tr><tr><td>offset</td><td>匹配到的子字符串在原字符串中的偏移量（即匹配的第一个字符在原字符串的索引）。</td></tr><tr><td>string</td><td>被匹配的原字符串。</td></tr></tbody></table><p>示例：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str=<span class="string">"123&#123;&#123;name&#125;&#125;456"</span>;</span><br><span class="line"><span class="keyword">var</span> s=str.replace(<span class="regexp">/(\&#123;\&#123;\s*)\w+(\s*\&#125;\&#125;)/</span>, <span class="function"><span class="keyword">function</span>(<span class="params">match,s1,s2,offset,string</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(match)      <span class="comment">// &#123;&#123;name&#125;&#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(s1)         <span class="comment">// &#123;&#123;</span></span><br><span class="line">    <span class="built_in">console</span>.log(s2)         <span class="comment">// &#125;&#125;</span></span><br><span class="line">    <span class="built_in">console</span>.log(offset)     <span class="comment">// 3</span></span><br><span class="line">    <span class="built_in">console</span>.log(string)     <span class="comment">// 123&#123;&#123;name&#125;&#125;456</span></span><br><span class="line">    <span class="keyword">return</span> s1+<span class="string">"code"</span>+s2</span><br><span class="line">&#125;)      <span class="comment">// 123&#123;&#123;code&#125;&#125;456</span></span><br></pre></td></tr></table></figure><p></p>]]></content>
    
    <summary type="html">
    
      js字符串的方法replace的第二个参数详解
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>js十大排序算法记录</title>
    <link href="https://hsianglee.cn/2019/07/10/js/js%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E8%AE%B0%E5%BD%95/"/>
    <id>https://hsianglee.cn/2019/07/10/js/js十大排序算法记录/</id>
    <published>2019-07-10T07:45:30.000Z</published>
    <updated>2019-07-11T02:27:16.299Z</updated>
    
    <content type="html"><![CDATA[<h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><hr><p>说明：即两两比较，较大的放到后面</p><p>动图演示：<br><img data-original="/images/十大排序算法/bubbleSort.gif" class="lazy" alt="冒泡排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len=arr.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="comment">// len-1是因为前一项为j，后一项为j+1</span></span><br><span class="line">        <span class="comment">// -i是因为每次第一次循环结束之后，倒数第i项便已经排好了</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;len<span class="number">-1</span>-i;j++)&#123;</span><br><span class="line">            <span class="comment">// 判断如果前面的比后面的大，则交换位置</span></span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="comment">// 交换第j项与第j+1项</span></span><br><span class="line">                <span class="keyword">var</span> temp=arr[j];</span><br><span class="line">                arr[j]=arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><hr><p>说明：即假设当前位置为最小项，如果后面找到比它小的，则记录当前项索引，里层循环结束后交换，交换当前项和最小项</p><p>动图演示：<br><img data-original="/images/十大排序算法/selectionSort.gif" class="lazy" alt="选择排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectionSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> minIndex,len=arr.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        minIndex=i;     <span class="comment">// 假设当前位置为最小项</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            <span class="comment">// 判断后面的是否有比它小的，如果有，则记录</span></span><br><span class="line">            <span class="keyword">if</span>(arr[minIndex]&gt;arr[j])&#123;</span><br><span class="line">                minIndex=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果当前项不是最小，则交换</span></span><br><span class="line">        <span class="keyword">if</span>(i!==minIndex)&#123;</span><br><span class="line">            <span class="keyword">var</span> temp=arr[i];</span><br><span class="line">            arr[i]=arr[minIndex];</span><br><span class="line">            arr[minIndex]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><hr><p>说明：类似玩扑克牌，假设从第二项开始都是未排列的，在已排序序列中从后向前扫描，找到相应位置插入（对应几乎快排好的数据效率高）。</p><p>动图演示：<br><img data-original="/images/十大排序算法/insertionSort.gif" class="lazy" alt="插入排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len=arr.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> temp=arr[i];    <span class="comment">// 待排序的项</span></span><br><span class="line">        <span class="comment">// 向前搜索，如果满足当前项大于待排项，则把当前项赋值给下一项，</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">0</span>&amp;&amp;arr[j]&gt;temp;j--)&#123;</span><br><span class="line">            arr[j+<span class="number">1</span>] = arr[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 把待排序项赋值到最后一个满足条件的项</span></span><br><span class="line">        arr[j+<span class="number">1</span>] = temp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// while写法，与上面的for循环等价</span></span><br><span class="line">        <span class="comment">// var preIndex=i-1;</span></span><br><span class="line">        <span class="comment">// var current=arr[i];</span></span><br><span class="line">        <span class="comment">// while(preIndex&gt;=0 &amp;&amp; arr[preIndex]&gt;current)&#123;</span></span><br><span class="line">        <span class="comment">//     arr[preIndex+1]=arr[preIndex];</span></span><br><span class="line">        <span class="comment">//     preIndex--;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        <span class="comment">// arr[preIndex+1]=current;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h3><hr><p>说明：插入排序改进版，即先把数据分为若干子数列进行排序，待序列基本有序时，再整体进行插入排序</p><p>动图演示：<br><img data-original="/images/十大排序算法/Sorting_shellsort_anim.gif" class="lazy" alt="希尔排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len=arr.length;</span><br><span class="line">    <span class="keyword">var</span> step=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(step &lt; len/<span class="number">3</span>) &#123;          <span class="comment">//定义间隔序列，确保最后一次间隔为1，即最后一次整体进行插入排序</span></span><br><span class="line">        step =step*<span class="number">3</span>+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(step;step&gt;<span class="number">0</span>;step=<span class="built_in">Math</span>.floor(step/<span class="number">3</span>))&#123;</span><br><span class="line">        <span class="comment">// 里层与插入排序基本一样</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=step;i&lt;len;i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> temp=arr[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> j=i-step;j&gt;=<span class="number">0</span>&amp;&amp;arr[j]&gt;temp;j-=step)&#123;</span><br><span class="line">                arr[j+step]=arr[j];</span><br><span class="line">            &#125;</span><br><span class="line">            arr[j+step]=temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><hr><p>说明：采用分治法，即一分二，二分四，分到最后的小数组只有一个元素，或没有元素，然后两两比较</p><p>动图演示：<br><img data-original="/images/十大排序算法/mergeSort.gif" class="lazy" alt="归并排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mergeSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len=arr.length;</span><br><span class="line">    <span class="comment">// left和right分割到最小为只有一个元素的数组</span></span><br><span class="line">    <span class="keyword">if</span>(len&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 找中间值，根据中间值把数组分为更小的两个数组</span></span><br><span class="line">    <span class="keyword">var</span> middle=<span class="built_in">Math</span>.floor(len/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">var</span> left=arr.slice(<span class="number">0</span>,middle);</span><br><span class="line">    <span class="keyword">var</span> right=arr.slice(middle);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> merge(mergeSort(left), mergeSort(right));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params">left, right</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// left和right为已排序的数组</span></span><br><span class="line">    <span class="keyword">var</span> result=[];</span><br><span class="line">    <span class="keyword">while</span>(left.length &amp;&amp; right.length)&#123;</span><br><span class="line">        <span class="keyword">if</span>(left[<span class="number">0</span>]&gt;right[<span class="number">0</span>])&#123;</span><br><span class="line">            result.push(right.shift());</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result.push(left.shift());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(left.length) result.push(left.shift());</span><br><span class="line">    <span class="keyword">while</span>(right.length) result.push(right.shift());</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><hr><p>说明：设置基准项，把所有比基准大的排后面，比基准小的排前面，然后把前面的数组和后面的数组再重复前面操作，即采用分治法，一分二，二分四…</p><p>动图演示：<br><img data-original="/images/十大排序算法/quickSort.gif" class="lazy" alt="快速排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr, left, right</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = arr.length,</span><br><span class="line">        partitionIndex,</span><br><span class="line">        left = <span class="keyword">typeof</span> left != <span class="string">'number'</span> ? <span class="number">0</span> : left,</span><br><span class="line">        right = <span class="keyword">typeof</span> right != <span class="string">'number'</span> ? len - <span class="number">1</span> : right;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">        partitionIndex = partition(arr, left, right);</span><br><span class="line">        quickSort(arr, left, partitionIndex<span class="number">-1</span>);</span><br><span class="line">        quickSort(arr, partitionIndex+<span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">partition</span>(<span class="params">arr, left ,right</span>) </span>&#123;     <span class="comment">// 分区操作</span></span><br><span class="line">    <span class="keyword">var</span> pivot = left,                      <span class="comment">// 设定基准值（pivot）</span></span><br><span class="line">        index = pivot + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = index; i &lt;= right; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &lt; arr[pivot]) &#123;</span><br><span class="line">            <span class="comment">// 每次找到一个比基准大，一个比基准小的交换</span></span><br><span class="line">            <span class="keyword">if</span>(i!==index) swap(arr, i, index);</span><br><span class="line">            index++;</span><br><span class="line">        &#125;        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 交换基准与最后一个比基准小的，即所有比基准小的都在基准前面了</span></span><br><span class="line">    swap(arr, pivot, index - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> index<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 下文省略swap函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">swap</span>(<span class="params">arr, i, j</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> temp = arr[i];</span><br><span class="line">    arr[i] = arr[j];</span><br><span class="line">    arr[j] = temp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><h3 id="堆排序"><a href="#堆排序" class="headerlink" title="堆排序"></a>堆排序</h3><hr><p>说明：是一种利用堆的概念来排序的选择排序。</p><ol><li>创建大顶堆，即每个节点大于或等于其子节点</li><li>堆首尾互换，尺寸减1，调用堆调整，数组顶端数据调整到相应位置</li><li>重复步骤 2，直到堆的尺寸为 1。</li></ol><p>动图演示：<br><img data-original="/images/十大排序算法/heapSort.gif" class="lazy" alt="堆排序"></p><p>js代码：<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> len;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buildMaxHeap</span>(<span class="params">arr</span>) </span>&#123;   <span class="comment">// 建立大顶堆</span></span><br><span class="line">    len = arr.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="built_in">Math</span>.floor(len/<span class="number">2</span>); i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        heapify(arr, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">heapify</span>(<span class="params">arr, i</span>) </span>&#123;     <span class="comment">// 堆调整</span></span><br><span class="line">    <span class="comment">// i为当前节点，left和right为其左右子节点</span></span><br><span class="line">    <span class="keyword">var</span> left = <span class="number">2</span> * i + <span class="number">1</span>,</span><br><span class="line">        right = <span class="number">2</span> * i + <span class="number">2</span>,</span><br><span class="line">        largest = i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 然后假设当前节点为最大节点，判断子节点是否比它大，把最大的节点交换到当前节点</span></span><br><span class="line">    <span class="keyword">if</span> (left &lt; len &amp;&amp; arr[left] &gt; arr[largest]) &#123;</span><br><span class="line">        largest = left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (right &lt; len &amp;&amp; arr[right] &gt; arr[largest]) &#123;</span><br><span class="line">        largest = right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (largest != i) &#123;</span><br><span class="line">        swap(arr, i, largest);</span><br><span class="line">        heapify(arr, largest);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">heapSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    buildMaxHeap(arr);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = arr.length<span class="number">-1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        swap(arr, <span class="number">0</span>, i);</span><br><span class="line">        len--;</span><br><span class="line">        heapify(arr, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><p>本文gif图及部分代码来源<a href="https://github.com/hustcc/JS-Sorting-Algorithm" target="_blank" rel="noopener">https://github.com/hustcc/JS-Sorting-Algorithm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序&quot;&gt;&lt;/a&gt;冒泡排序&lt;/h3&gt;&lt;hr&gt;&lt;p&gt;说明：即两两比较，较大的放到后面&lt;/p&gt;&lt;p&gt;动图演示：&lt;br&gt;&lt;img data-original=&quot;/image
      
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>记录以前不知道的web细节</title>
    <link href="https://hsianglee.cn/2019/06/13/js/%E8%AE%B0%E5%BD%95%E4%BB%A5%E5%89%8D%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84web%E7%BB%86%E8%8A%82/"/>
    <id>https://hsianglee.cn/2019/06/13/js/记录以前不知道的web细节/</id>
    <published>2019-06-13T01:44:23.000Z</published>
    <updated>2020-03-25T06:25:55.543Z</updated>
    
    <content type="html"><![CDATA[<h3 id="移除event-preventDefault"><a href="#移除event-preventDefault" class="headerlink" title="移除event.preventDefault()"></a>移除event.preventDefault()</h3><hr><ol><li>如果一个事件中有时需要调用<code>event.preventDefault()</code>取消浏览器默认事件，有时又不需要调用</li><li>比如自定义滚动条，当滚动条还没有滚动到最顶端或者最底端时，需要调用<code>event.preventDefault()</code>取消浏览器默认事件，不然会出现自定义滚动条和最外层document的滚动条同时滚动</li><li>而当滚动条滚动到最顶端或者最底端时，自定义滚动条已经不能滚动了，则需要让最外层document的滚动条滚动，便需要移除<code>event.preventDefault()</code></li><li><p>解决方法便是取消当前事件的绑定，示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> f=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    <span class="comment">// 滚动到最大最小时，重新绑定事件，相当于移除preventDefault</span></span><br><span class="line">    <span class="keyword">if</span>(that.current &gt;= that.maxCurrent || that.current &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">        that.wrapEl.off(<span class="string">"mousewheel DOMMouseScroll"</span>, f).on(<span class="string">"mousewheel DOMMouseScroll"</span>, f);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.wrapEl.on(<span class="string">"mousewheel DOMMouseScroll"</span>, f);         <span class="comment">// 给dom添加滚动事件</span></span><br></pre></td></tr></table></figure></li><li><p><a href="https://layuiextend.hsianglee.cn/scrollbar/" target="_blank" rel="noopener">滚动条示例</a></p></li></ol><h3 id="css-margin百分比"><a href="#css-margin百分比" class="headerlink" title="css margin百分比"></a>css margin百分比</h3><hr><ol><li><p>可以对margin设置百分比，但是是相对于父元素的宽度的百分比，示例代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// div &#123;width: 400px;height: 200px;outline: 1px solid #ccc&#125;</span></span><br><span class="line"><span class="comment">// p&#123;margin: 10%;display: inline-block;padding: 10%&#125;</span></span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;aaa&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>设置如上则可以看到p的margin全部为40px，而不是左右40px上下20px，padding同理<br><img data-original="/images/记录以前不知道的web细节/1.png" class="lazy" style="margin:0 auto" alt="margin百分比"></p></li></ol><h3 id="css-line-height百分比和数字值的区别"><a href="#css-line-height百分比和数字值的区别" class="headerlink" title="css line-height百分比和数字值的区别"></a>css line-height百分比和数字值的区别</h3><hr><ol><li>line-height设置数字值时，子元素会继承这个数字，所以子元素的line-height值为这个数字乘以子元素的font-size</li><li>line-height设置百分比时，元素会先计算出值，即百分比乘以元素的font-size，然后把这个值继承给子元素</li><li><p>示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// div &#123;width: 400px;height: 200px;outline: 1px solid #ccc;font-size: 30px;&#125;</span></span><br><span class="line"><span class="comment">// p&#123;margin: 0;display: inline-block;padding: 0;background: #ddd;font-size:15px;&#125;</span></span><br><span class="line"><span class="comment">// .test1&#123;line-height: 150%;&#125;</span></span><br><span class="line"><span class="comment">// .test2&#123;line-height: 1.5;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// p的line-height为：150% * 30</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"test1"</span>&gt;</span><br><span class="line">    &lt;p&gt;aaa&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"><span class="comment">// p的line-height为：1.5 * 15</span></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"test2"</span>&gt;</span><br><span class="line">    &lt;p&gt;aaa&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>结果如图：<br><img data-original="/images/记录以前不知道的web细节/2.png" class="lazy" style="margin:0 auto" alt="line-height百分比和数字值的区别"></p></li></ol><h3 id="js判断进入当前页面的方式"><a href="#js判断进入当前页面的方式" class="headerlink" title="js判断进入当前页面的方式"></a>js判断进入当前页面的方式</h3><hr><p><code>performance.navigation.type</code></p><ol><li>如果等于0，则为直接进入页面</li><li>如果等于1，则是在本页面刷新进入的</li><li>如果等于2，则是通过后退进入本页面的</li></ol><h3 id="表格边框css属性"><a href="#表格边框css属性" class="headerlink" title="表格边框css属性"></a>表格边框css属性</h3><hr><p><code>border-collapse</code>：CSS 属性是用来决定表格的边框是分开的还是合并的。</p><ol><li>separate: 分隔模式(默认)，在分隔模式下，相邻的单元格都拥有独立的边框。</li><li>collapse: 合并模式，在合并模式下，相邻单元格共享边框。</li></ol><p><code>border-spacing</code>：指定相邻单元格边框之间的距离（只适用于 separate分隔模式 ）。</p><h3 id="解决ios使用history-back-后退页面不刷新的bug"><a href="#解决ios使用history-back-后退页面不刷新的bug" class="headerlink" title="解决ios使用history.back()后退页面不刷新的bug"></a>解决ios使用history.back()后退页面不刷新的bug</h3><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> browserRule = <span class="regexp">/^.*((iPhone)|(iPad)|(Safari))+.*$/</span>;</span><br><span class="line"><span class="keyword">if</span> (browserRule.test(navigator.userAgent)) &#123;</span><br><span class="line">    <span class="built_in">window</span>.onpageshow = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.persisted) &#123;</span><br><span class="line">            <span class="built_in">window</span>.location.reload()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="解决ios使用fixes定位，input失去焦点时无法再次选中的bug"><a href="#解决ios使用fixes定位，input失去焦点时无法再次选中的bug" class="headerlink" title="解决ios使用fixes定位，input失去焦点时无法再次选中的bug"></a>解决ios使用fixes定位，input失去焦点时无法再次选中的bug</h3><hr><p>直接给input添加一个blur事件，执行window.scroll(0, 0)，手动把浏览器滚动到最上面</p>]]></content>
    
    <summary type="html">
    
      滚动条中移除event.preventDefault()的方法，css设置margin百分比，line-height百分比和数字值的区别
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
      <category term="css" scheme="https://hsianglee.cn/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>js自定义事件</title>
    <link href="https://hsianglee.cn/2019/05/13/js/js%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6/"/>
    <id>https://hsianglee.cn/2019/05/13/js/js自定义事件/</id>
    <published>2019-05-13T06:34:56.000Z</published>
    <updated>2019-05-13T07:24:55.329Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1. html如下：</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"test1"</span> lay-filter=<span class="string">"data1"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="test2" lay-filter="data2"&gt;&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure><p><strong>2. 创建构造函数InitClass，options参数包含传过来的选择器el，render函数为生成dom，evt函数为绑定的事件</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">InitClass</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.options=options;</span><br><span class="line">    <span class="keyword">this</span>.filter=<span class="built_in">document</span>.querySelector(options.el).getAttribute(<span class="string">"lay-filter"</span>);</span><br><span class="line">    <span class="keyword">this</span>.render();</span><br><span class="line">&#125;</span><br><span class="line">InitClass.prototype.render=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.options.el).innerHTML=<span class="string">'&lt;input type="text"&gt;&lt;button&gt;获取&lt;/button&gt;'</span>;</span><br><span class="line">    <span class="keyword">this</span>.evt();</span><br><span class="line">&#125;</span><br><span class="line">InitClass.prototype.evt=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">var</span> childs=<span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.options.el).children;</span><br><span class="line">    childs[<span class="number">1</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> val=childs[<span class="number">0</span>].value;</span><br><span class="line">        <span class="comment">// 如果input为空或不是数字，则不返回数据</span></span><br><span class="line">        <span class="keyword">if</span>(val &amp;&amp; !<span class="built_in">isNaN</span>(val))&#123;</span><br><span class="line">            <span class="comment">// testModule: 对外暴漏的变量，getNumberInp: 自定义事件名，filter: 不同的dom对象，最后一个参数为回调函数的参数，并且返回的this为当前按钮对象</span></span><br><span class="line">            InitClass.event.call(<span class="keyword">this</span>, <span class="string">"testModule"</span>, <span class="string">'getNumberInp('</span>+that.filter+<span class="string">')'</span>, &#123;</span><br><span class="line">                value: <span class="built_in">Number</span>(val)</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 添加自定义事件</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 事件存储的变量</span></span><br><span class="line">InitClass.config=&#123;</span><br><span class="line">    event: &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line">InitClass.onevent=<span class="function"><span class="keyword">function</span>(<span class="params">modName, events, callback</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> modName !== <span class="string">'string'</span> || <span class="keyword">typeof</span> callback !== <span class="string">'function'</span>) <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">return</span> InitClass.event(modName, events, <span class="literal">null</span>, callback);</span><br><span class="line">&#125;</span><br><span class="line">InitClass.event=<span class="function"><span class="keyword">function</span>(<span class="params">modName, events, params, fn</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span></span><br><span class="line">    ,filter = events.match(<span class="regexp">/\((.*)\)$/</span>) || [] <span class="comment">//提取事件过滤器字符结构，如：select(xxx)</span></span><br><span class="line">    ,eventName = (modName + <span class="string">'.'</span> + events).replace(filter[<span class="number">0</span>], <span class="string">''</span>) <span class="comment">//获取事件名称，如：form.select</span></span><br><span class="line">    ,filterName = filter[<span class="number">1</span>] || <span class="string">''</span>; <span class="comment">//获取过滤器名称,，如：xxx</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加事件</span></span><br><span class="line">    <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">        InitClass.config.event[eventName] = InitClass.config.event[eventName] || &#123;&#125;;</span><br><span class="line">        InitClass.config.event[eventName][filterName] = fn;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行事件回调</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> InitClass.config.event[eventName])&#123;</span><br><span class="line">        <span class="comment">//执行指定事件</span></span><br><span class="line">        key === filterName &amp;&amp; InitClass.config.event[eventName][key].call(that, params);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>4. 对外暴漏的变量</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> testModule = &#123;</span><br><span class="line">    on: <span class="function"><span class="keyword">function</span>(<span class="params">events, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> InitClass.onevent.call(<span class="keyword">this</span>, <span class="string">'testModule'</span>, events, callback);</span><br><span class="line">    &#125;,</span><br><span class="line">    render: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> InitClass(options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>5. 框架使用代码为：</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">testModule.render(&#123;</span><br><span class="line">    el: <span class="string">".test1"</span></span><br><span class="line">&#125;);</span><br><span class="line">testModule.render(&#123;</span><br><span class="line">    el: <span class="string">".test2"</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">testModule.on(<span class="string">"getNumberInp(data1)"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"第一个对象返回的数据："</span>+d.value)</span><br><span class="line">&#125;)</span><br><span class="line">testModule.on(<span class="string">"getNumberInp(data2)"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"第二个对象返回的数据："</span>+d.value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>6. 执行结果：</strong></p><hr><p>第一个input输入为数字时，点击第一个按钮，结果如下图：<br><img data-original="/images/js自定义事件/1.png" class="lazy" style="margin:0 auto" alt="js自定义事件"></p><p>输入非数字，则不执行回调，如下图：<br><img data-original="/images/js自定义事件/2.png" class="lazy" style="margin:0 auto" alt="js自定义事件"></p><p>第二个input输入为数字时，点击第二个按钮，结果如下图：<br><img data-original="/images/js自定义事件/3.png" class="lazy" style="margin:0 auto" alt="js自定义事件"></p><p><strong>7. 完整js代码</strong></p><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"test1"</span> lay-filter=<span class="string">"data1"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="test2" lay-filter="data2"&gt;&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">window</span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">InitClass</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.options=options;</span><br><span class="line">            <span class="keyword">this</span>.filter=<span class="built_in">document</span>.querySelector(options.el).getAttribute(<span class="string">"lay-filter"</span>);</span><br><span class="line">            <span class="keyword">this</span>.render();</span><br><span class="line">        &#125;</span><br><span class="line">        InitClass.prototype.render=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.options.el).innerHTML=<span class="string">'&lt;input type="text"&gt;&lt;button&gt;获取&lt;/button&gt;'</span>;</span><br><span class="line">            <span class="keyword">this</span>.evt();</span><br><span class="line">        &#125;</span><br><span class="line">        InitClass.prototype.evt=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">var</span> childs=<span class="built_in">document</span>.querySelector(<span class="keyword">this</span>.options.el).children;</span><br><span class="line">            childs[<span class="number">1</span>].onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> val=childs[<span class="number">0</span>].value;</span><br><span class="line">                <span class="keyword">if</span>(val &amp;&amp; !<span class="built_in">isNaN</span>(val))&#123;</span><br><span class="line">                    InitClass.event.call(<span class="keyword">this</span>, <span class="string">"testModule"</span>, <span class="string">'getNumberInp('</span>+that.filter+<span class="string">')'</span>, &#123;</span><br><span class="line">                        value: <span class="built_in">Number</span>(val)</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        InitClass.config=&#123;</span><br><span class="line">            event: &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        InitClass.onevent=<span class="function"><span class="keyword">function</span>(<span class="params">modName, events, callback</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> modName !== <span class="string">'string'</span> || <span class="keyword">typeof</span> callback !== <span class="string">'function'</span>) <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">            <span class="keyword">return</span> InitClass.event(modName, events, <span class="literal">null</span>, callback);</span><br><span class="line">        &#125;</span><br><span class="line">        InitClass.event=<span class="function"><span class="keyword">function</span>(<span class="params">modName, events, params, fn</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> that = <span class="keyword">this</span></span><br><span class="line">            ,filter = events.match(<span class="regexp">/\((.*)\)$/</span>) || [] <span class="comment">//提取事件过滤器字符结构，如：select(xxx)</span></span><br><span class="line">            ,eventName = (modName + <span class="string">'.'</span> + events).replace(filter[<span class="number">0</span>], <span class="string">''</span>) <span class="comment">//获取事件名称，如：form.select</span></span><br><span class="line">            ,filterName = filter[<span class="number">1</span>] || <span class="string">''</span>; <span class="comment">//获取过滤器名称,，如：xxx</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//添加事件</span></span><br><span class="line">            <span class="keyword">if</span> (fn) &#123;</span><br><span class="line">                InitClass.config.event[eventName] = InitClass.config.event[eventName] || &#123;&#125;;</span><br><span class="line">                InitClass.config.event[eventName][filterName] = fn;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//执行事件回调</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> InitClass.config.event[eventName])&#123;</span><br><span class="line">                <span class="comment">//执行指定事件</span></span><br><span class="line">                key === filterName &amp;&amp; InitClass.config.event[eventName][key].call(that, params);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> testModule = &#123;</span><br><span class="line">            on: <span class="function"><span class="keyword">function</span>(<span class="params">events, callback</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> InitClass.onevent.call(<span class="keyword">this</span>, <span class="string">'testModule'</span>, events, callback);</span><br><span class="line">            &#125;,</span><br><span class="line">            render: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">new</span> InitClass(options);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">window</span>.testModule=testModule;</span><br><span class="line">    &#125;)(<span class="built_in">window</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用</span></span><br><span class="line">    testModule.render(&#123;</span><br><span class="line">        el: <span class="string">".test1"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    testModule.render(&#123;</span><br><span class="line">        el: <span class="string">".test2"</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    testModule.on(<span class="string">"getNumberInp(data1)"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"第一个对象返回的数据："</span>+d.value)</span><br><span class="line">    &#125;)</span><br><span class="line">    testModule.on(<span class="string">"getNumberInp(data2)"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"第二个对象返回的数据："</span>+d.value)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      仿照layui的自定义事件封装框架，需求是给一个dom节点添加子节点input和button，点击按钮，如果前一个input的值是数字，则执行回调函数，否则，不执行回调函数。
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>网页引入github-stars和显示fork me on github</title>
    <link href="https://hsianglee.cn/2019/04/10/github/%E5%9C%A8%E7%BD%91%E9%A1%B5%E5%BC%95%E5%85%A5github-stars/"/>
    <id>https://hsianglee.cn/2019/04/10/github/在网页引入github-stars/</id>
    <published>2019-04-10T06:34:25.000Z</published>
    <updated>2019-04-11T06:50:34.856Z</updated>
    
    <content type="html"><![CDATA[<h4 id="页面引入github-stars"><a href="#页面引入github-stars" class="headerlink" title="页面引入github-stars"></a>页面引入github-stars</h4><ol><li>直接访问地址<a href="https://img.shields.io/github/stars/hsiangleev/layuiExtend.svg" target="_blank" rel="noopener">https://img.shields.io/github/stars/hsiangleev/layuiExtend.svg</a>，就可以看到图标了。</li><li>其中把hsiangleev/layuiExtend字段换成自己的github名和仓库名就能看到自己的仓库stars数量了，stars换成forks，可以看到forks数量。</li><li>地址后面还可以添加参数控制样式颜色之类的，具体配置可以看下网站<a href="https://shields.io/" target="_blank" rel="noopener">shields.io</a></li></ol><p>示例：<a class="no-line" href="https://github.com/hsiangleev/layuiExtend" target="_blank" rel="noopener"><img class="no-increase inline" src="https://img.shields.io/github/stars/hsiangleev/layuiExtend.svg?style=social"></a><a class="no-line" href="https://github.com/hsiangleev/layuiExtend" target="_blank" rel="noopener"><img class="no-increase inline" src="https://img.shields.io/github/forks/hsiangleev/layuiExtend.svg?style=social"></a></p><hr><h4 id="网站左上角或者右上角显示fork-me-on-github"><a href="#网站左上角或者右上角显示fork-me-on-github" class="headerlink" title="网站左上角或者右上角显示fork me on github"></a>网站左上角或者右上角显示fork me on github</h4><ol><li><p>使用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"https://github.com/hsiangleev/layuiExtend"</span>&gt;</span><br><span class="line">    &lt;img width=<span class="string">"149"</span> height=<span class="string">"149"</span> src=<span class="string">"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"attachment-full size-full"</span> alt=<span class="string">"Fork me on GitHub"</span> data-recalc-dims=<span class="string">"1"</span>&gt;</span><br><span class="line">&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>示例：<a href="https://github.com/hsiangleev/layuiExtend" target="_blank" rel="noopener"><img width="149" height="149" src="https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149" class="attachment-full size-full no-increase" alt="Fork me on GitHub" data-recalc-dims="1"></a></p></li><li><p>更多使用可以看下<a href="https://github.blog/2008-12-19-github-ribbons/" target="_blank" rel="noopener">GitHub Ribbons</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      逛网站的时候经常可以看到别人在页面嵌入自己的github项目的stars，和网页右上角显示fork me on github，并链接到项目，所以搜了一下记录下来。
    
    </summary>
    
      <category term="github" scheme="https://hsianglee.cn/categories/github/"/>
    
    
      <category term="github" scheme="https://hsianglee.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>parseInt深入探索</title>
    <link href="https://hsianglee.cn/2019/03/22/js/parseInt%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3/"/>
    <id>https://hsianglee.cn/2019/03/22/js/parseInt深入理解/</id>
    <published>2019-03-22T05:09:36.000Z</published>
    <updated>2019-04-11T06:49:08.542Z</updated>
    
    <content type="html"><![CDATA[<p>今天突然看到了一个js的题目<code>[1,2,3].map(parseInt)</code>应该输出什么，由于对parseInt的参数只是知道个大概，没有想出这个题目的结果，然后到MDN上面看了一下parseInt的解释：</p><blockquote><p><strong>parseInt(string, radix);</strong></p></blockquote><ol><li>string 要被解析的值。如果参数不是一个字符串，则将其转换为字符串(使用 ToString 抽象操作)。字符串开头的空白符将会被忽略。</li><li>radix 一个介于2和36之间的整数(数学系统的基础)，表示上述字符串的基数。比如参数”10”表示使用我们通常使用的十进制数值系统。始终指定此参数可以消除阅读该代码时的困惑并且保证转换结果可预测。当未指定基数时，不同的实现会产生不同的结果，通常将值默认为10。</li><li>返回解析后的整数值。 如果被解析参数的第一个字符无法被转化成数值类型，则返回 NaN。</li></ol><p>由于<code>[1,2,3].map(function(val,index){})</code>中的val,index分别为(1,0)(2,1)(3,2)<br>所以<code>[1,2,3].map(parseInt)</code>相当于把(val,index)传入parseInt，即[parseInt(1,0),parseInt(2，1),parseInt(3，2)]</p><hr><p>当基数radix为 undefined，或者基数为 0 或者没有指定的情况下，JavaScript 作如下处理：</p><ol><li>如果字符串 string 以”0x”或者”0X”开头, 则基数是16 (16进制).</li><li>如果字符串 string 以”0”开头, 基数是8（八进制）或者10（十进制），那么具体是哪个基数由实现环境决定。ECMAScript 5 规定使用10，但是并不是所有的浏览器都遵循这个规定。因此，永远都要明确给出radix参数的值。</li><li><strong>如果字符串 string 以其它任何值开头，则基数是10 (十进制)。</strong></li></ol><p>所以<code>parseInt(1,0)</code>即<code>parseInt(1,10)</code>，结果为1。</p><hr><p><strong>如果parseInt的字符不是指定基数中的数字，则忽略该字符和所有后续字符，并返回解析到该点的整数值。</strong>parseInt将数字截断为整数值。允许使用前导空格和尾随空格。<br>所以在<code>parseInt(2，1)</code>中，2不是1进制中的数字，因为1进制只有0，<code>parseInt(3，2)</code>中，3不是2进制中的数字，因为2进制只有0和1，所以会忽略该字符，即返回 NaN。</p><p>即该题目的结果为[1,NaN,NaN]。</p><p><strong>总结：</strong><br><strong>可以这样理解，把radix进制的string转成10进制的数字，若string中的字符不在radix进制内，则忽略该字符和所有后续字符</strong><br><code>parseInt(12,6)</code>，即把6进制的12转换成10进制，所以是8<br>而<code>parseInt(127,6)</code>，由于字符7不在6进制中，所以忽略，即也是把6进制的12转换成10进制，所以也是8</p>]]></content>
    
    <summary type="html">
    
      由一个js的题目[1,2,3].map(parseInt)引发的探索
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>webpack配置react</title>
    <link href="https://hsianglee.cn/2019/03/09/js/webpack%E9%85%8D%E7%BD%AEreact/"/>
    <id>https://hsianglee.cn/2019/03/09/js/webpack配置react/</id>
    <published>2019-03-09T01:45:50.000Z</published>
    <updated>2019-04-11T06:49:19.461Z</updated>
    
    <content type="html"><![CDATA[<ol><li>初始化package.json<br><code>npm init</code></li><li>安装babel-loader(新版8.0.0报错)<br><code>cnpm install babel-loader@7.1.5 babel-preset-es2015 babel-preset-react --save-dev</code></li><li>安装webpack<br><code>cnpm install webpack webpack-cli webpack-dev-server --save-dev</code></li><li><p>创建webpack.config.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">var</span> HtmlwebpackPlugin = <span class="built_in">require</span>(<span class="string">'html-webpack-plugin'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ROOT_PATH = path.resolve(__dirname);</span><br><span class="line"><span class="keyword">var</span> APP_PATH = path.resolve(ROOT_PATH, <span class="string">'app'</span>);</span><br><span class="line"><span class="keyword">var</span> BUILD_PATH = path.resolve(ROOT_PATH, <span class="string">'build'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports= &#123;</span><br><span class="line">   <span class="comment">// @babel/polyfill兼容ie9,ie10</span></span><br><span class="line">    entry: [<span class="string">"@babel/polyfill"</span>, path.resolve(APP_PATH, <span class="string">'index.jsx'</span>)],</span><br><span class="line">    output: &#123;</span><br><span class="line">        path: BUILD_PATH,</span><br><span class="line">        filename: <span class="string">'bundle.js'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    mode: <span class="string">"development"</span>,</span><br><span class="line">    <span class="comment">// mode: "production",</span></span><br><span class="line">    <span class="comment">//enable dev source map</span></span><br><span class="line">    devtool: <span class="string">'eval-source-map'</span>,</span><br><span class="line">    <span class="comment">//enable dev server</span></span><br><span class="line">    devServer: &#123;</span><br><span class="line">        historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">        hot: <span class="literal">true</span>,</span><br><span class="line">        inline: <span class="literal">true</span>,</span><br><span class="line">        progress: <span class="literal">true</span>,</span><br><span class="line">        port: <span class="number">3000</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//babel重要的loader在这里</span></span><br><span class="line">    <span class="built_in">module</span>: &#123;</span><br><span class="line">        rules: [</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.jsx?$/</span>,</span><br><span class="line">                loader: <span class="string">'babel-loader'</span>,</span><br><span class="line">                include: APP_PATH</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">                loaders: [<span class="string">'style-loader'</span>, <span class="string">'css-loader'</span>, <span class="string">'sass-loader'</span>]</span><br><span class="line">            &#125;,</span><br><span class="line">&#123;</span><br><span class="line">test: <span class="regexp">/\.(png|jpg|gif|svg)$/</span>,</span><br><span class="line">loader: <span class="string">'file-loader'</span>,</span><br><span class="line">options: &#123; <span class="attr">name</span>: <span class="string">'[name].[ext]?[hash]'</span> &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123; </span><br><span class="line">test: <span class="regexp">/\.(gif|jpg|png|woff|woff2|svg|eot|ttf)\??.*$/</span>, </span><br><span class="line">loader: <span class="string">'url-loader?limit=50000&amp;name=[path][name].[ext]'</span></span><br><span class="line">&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    resolve: &#123;</span><br><span class="line">        extensions: [<span class="string">'*'</span>, <span class="string">'.js'</span>, <span class="string">'.jsx'</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        <span class="keyword">new</span> HtmlwebpackPlugin(&#123;</span><br><span class="line">            title: <span class="string">'My first react app'</span>,</span><br><span class="line">            template: <span class="string">"index.html"</span>,</span><br><span class="line">            filename: <span class="string">"index.html"</span>,</span><br><span class="line">            inject: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>npm中添加webpack启动命令</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"dev"</span>: <span class="string">"webpack-dev-server --progress --profile --colors --hot"</span>,</span><br><span class="line"><span class="string">"build"</span>: <span class="string">"webpack --progress --profile --colors"</span>,</span><br><span class="line"><span class="string">"test"</span>: <span class="string">"karma start"</span></span><br></pre></td></tr></table></figure></li><li><p>安装React和React-Dom<br><code>cnpm install react react-dom --save</code></p></li><li>应用中使用sass<br><code>cnpm install css-loader style-loader sass-loader node-sass --save-dev</code></li><li><p>创建 .babelrc文件，babel分离</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"presets"</span>: [<span class="string">"react"</span>, <span class="string">"es2015"</span>],</span><br><span class="line">    <span class="string">"env"</span>: &#123;</span><br><span class="line">        <span class="string">"development"</span>: &#123;</span><br><span class="line">            <span class="string">"presets"</span>: [<span class="string">"react-hmre"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>安装其他loader<br><code>cnpm install html-webpack-plugin file-loader babel-core url-loader babel-preset-react-hmre @babel/polyfill --save-dev</code></p></li><li><p>loader汇总</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"babel-core"</span>: <span class="string">"^6.26.3"</span>,</span><br><span class="line">    <span class="string">"babel-loader"</span>: <span class="string">"^7.1.5"</span>,</span><br><span class="line">    <span class="string">"babel-preset-es2015"</span>: <span class="string">"^6.24.1"</span>,</span><br><span class="line">    <span class="string">"babel-preset-react"</span>: <span class="string">"^6.24.1"</span>,</span><br><span class="line">    <span class="string">"babel-preset-react-hmre"</span>: <span class="string">"^1.1.1"</span>,</span><br><span class="line">    <span class="string">"css-loader"</span>: <span class="string">"^1.0.0"</span>,</span><br><span class="line">    <span class="string">"file-loader"</span>: <span class="string">"^2.0.0"</span>,</span><br><span class="line">    <span class="string">"html-webpack-plugin"</span>: <span class="string">"^3.2.0"</span>,</span><br><span class="line">    <span class="string">"node-sass"</span>: <span class="string">"^4.9.3"</span>,</span><br><span class="line">    <span class="string">"sass-loader"</span>: <span class="string">"^7.1.0"</span>,</span><br><span class="line">    <span class="string">"style-loader"</span>: <span class="string">"^0.23.0"</span>,</span><br><span class="line">    <span class="string">"url-loader"</span>: <span class="string">"^1.1.1"</span>,</span><br><span class="line">    <span class="string">"webpack"</span>: <span class="string">"^4.17.1"</span>,</span><br><span class="line">    <span class="string">"webpack-cli"</span>: <span class="string">"^3.1.0"</span>,</span><br><span class="line">    <span class="string">"webpack-dev-server"</span>: <span class="string">"^3.1.7"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"@babel/polyfill"</span>: <span class="string">"^7.2.5"</span>,</span><br><span class="line">    <span class="string">"react"</span>: <span class="string">"^16.8.4"</span>,</span><br><span class="line">    <span class="string">"react-dom"</span>: <span class="string">"^16.8.4"</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>创建index.html模板页<br>title为<code>&lt;title&gt;&lt;%= htmlWebpackPlugin.options.title %&gt;&lt;/title&gt;</code><br>body为<code>&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</code></p></li><li><p>创建src文件夹，src文件夹下创建index.jsx</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> ReactDOM <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>执行命令<code>npm run dev</code>，浏览器打开<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      webpack配置react项目练习
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
      <category term="react" scheme="https://hsianglee.cn/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>记录未留心的vue细节</title>
    <link href="https://hsianglee.cn/2019/03/06/js/%E6%9C%AA%E7%95%99%E5%BF%83%E7%9A%84vue%E7%BB%86%E8%8A%82/"/>
    <id>https://hsianglee.cn/2019/03/06/js/未留心的vue细节/</id>
    <published>2019-03-06T05:34:26.000Z</published>
    <updated>2019-04-11T06:49:26.057Z</updated>
    
    <content type="html"><![CDATA[<h4 id="vue模板语法"><a href="#vue模板语法" class="headerlink" title="vue模板语法"></a>vue模板语法</h4><hr><ol><li><p>v-once指令<br>通过使用 v-once 指令，你也能执行一次性地插值，当数据改变时，插值处的内容不会更新。<br><code>&lt;span v-once&gt;这个将不会改变: &lt;/span&gt;</code></p></li><li><p>动态参数（2.6.0 新增）<br>可以用方括号括起来的 JavaScript 表达式作为一个指令的参数，即节点属性可以动态设置<br><code>&lt;a v-bind:[attributeName]=&quot;url&quot;&gt; ... &lt;/a&gt;</code><br><code>&lt;a v-on:[eventName]=&quot;doSomething&quot;&gt; ... &lt;/a&gt;</code></p></li></ol><h4 id="计算属性和侦听器"><a href="#计算属性和侦听器" class="headerlink" title="计算属性和侦听器"></a>计算属性和侦听器</h4><hr><ol><li>计算属性（对于任何复杂逻辑，都应当使用计算属性）<ul><li>如果计算属性的依赖属性发生改变，则计算属性也会相应改变</li><li>计算属性是基于它们的依赖进行缓存的，只在相关依赖发生改变时它们才会重新求值</li></ul></li></ol><h4 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h4><hr><ol><li><p>在 template 元素上使用 v-if 条件渲染分组，而不需要多加一层div<br>因为 v-if 是一个指令，所以必须将它添加到一个元素上。但是如果想切换多个元素，此时可以把一个 template 元素当做不可见的包裹元素，并在上面使用 v-if。最终的渲染结果将不包含 template 元素。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">"ok"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>用 key 管理可复用的元素<br>Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。所以使用v-if切换input的时候已经输入的input值不会清除，所以添加一个具有唯一值的 key 属性代表这两个元素是完全独立的，不要复用它们。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">"loginType === 'username'"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Username<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"Enter your username"</span> <span class="attr">key</span>=<span class="string">"username-input"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>Email<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">"Enter your email address"</span> <span class="attr">key</span>=<span class="string">"email-input"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h4><hr><ol><li><p>v-for遍历对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- value, key, index分别代表 值, 键, 索引 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">"(value, key, index) in object"</span>&gt;</span></span><br><span class="line">    &#123;&#123; index &#125;&#125;. &#123;&#123; key &#125;&#125;: &#123;&#123; value &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>数组更新检测<br>由于 JavaScript 的限制，Vue 不能检测以下变动的数组：</p><ul><li>当你利用索引直接设置一个项时，例如：vm.items[indexOfItem] = newValue</li><li><p>当你修改数组的长度时，例如：vm.items.length = newLength</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">data: &#123;</span><br><span class="line">    items: [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">vm.items[<span class="number">1</span>] = <span class="string">'x'</span> <span class="comment">// 不是响应性的</span></span><br><span class="line">vm.items.length = <span class="number">2</span> <span class="comment">// 不是响应性的</span></span><br></pre></td></tr></table></figure></li><li><p>为了解决第一类问题，以下两种方式都可以实现和 <code>vm.items[indexOfItem] = newValue</code> 相同的效果，同时也将触发状态更新：<br><code>Vue.set(vm.items, indexOfItem, newValue)</code><br><code>vm.items.splice(indexOfItem, 1, newValue)</code></p></li><li>为了解决第二类问题，你可以使用 splice：<br><code>vm.items.splice(newLength)</code></li></ul></li><li><p>对象更改检测注意事项<br>由于 JavaScript 的限制，Vue 不能检测对象属性的添加或删除：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    data: &#123;</span><br><span class="line">        person: &#123;</span><br><span class="line">            a: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// `vm.person.a` 现在是响应式的</span></span><br><span class="line"></span><br><span class="line">vm.person.b = <span class="number">2</span></span><br><span class="line"><span class="comment">// `vm.person.b` 不是响应式的</span></span><br></pre></td></tr></table></figure><p>可以使用 vm.$set 实例方法，它只是全局 Vue.set 的别名：<br><code>vm.$set(vm.person, &#39;b&#39;, 2)</code></p></li></ol><h4 id="表单输入绑定-值绑定"><a href="#表单输入绑定-值绑定" class="headerlink" title="表单输入绑定(值绑定)"></a>表单输入绑定(值绑定)</h4><hr><ol><li><p>复选框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"checkbox"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">"toggle"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">true-value</span>=<span class="string">"yes"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">false-value</span>=<span class="string">"no"</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br></pre></td></tr></table></figure><p>被选中时toggle为yes, 即<code>vm.toggle === &#39;yes&#39;</code>, 未被选中时为no, 即<code>vm.toggle === &#39;no&#39;</code></p></li><li><p>单选按钮<br><code>&lt;input type=&quot;radio&quot; v-model=&quot;pick&quot; v-bind:value=&quot;a&quot;&gt;</code><br>即<code>vm.pick===vm.a</code></p></li><li><p>选择框的选项</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"selected"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">v-bind:value</span>=<span class="string">"&#123; number: 123 &#125;"</span>&gt;</span>123<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当选中时</span></span><br><span class="line"><span class="keyword">typeof</span> vm.selected <span class="comment">// =&gt; 'object'</span></span><br><span class="line">vm.selected.number <span class="comment">// =&gt; 123</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      再次阅读vue文档,看到了许多以前忽略的细节,这次把它们记录下来
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
      <category term="vue" scheme="https://hsianglee.cn/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>js选中文本和复制文本</title>
    <link href="https://hsianglee.cn/2019/03/01/js/js%E9%80%89%E4%B8%AD%E6%96%87%E6%9C%AC%E4%B8%8E%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/"/>
    <id>https://hsianglee.cn/2019/03/01/js/js选中文本与复制文本/</id>
    <published>2019-03-01T08:16:12.000Z</published>
    <updated>2019-04-11T06:49:09.917Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Selection"><a href="#Selection" class="headerlink" title="Selection"></a>Selection</h3><hr><p><code>var selection = window.getSelection();</code><br>selection 是一个 Selection 对象。 如果想要将 selection 转换为字符串，可通过连接一个空字符串（””）或使用 String.toString() 方法。即<code>selection+&quot;&quot;</code>或者<code>selection.toString()</code>会返回页面中选中的文本</p><h3 id="Range"><a href="#Range" class="headerlink" title="Range"></a>Range</h3><hr><p>被选中的文字会对应一个range对象，代表选中的区域，通过<code>window.getSelection().getRangeAt(0)</code>代表第一个被选中的区域，也可以通过<code>document.createRange()</code>创建一个选中区域，<code>range.selectNodeContents(el)</code>将dom节点添加到range对象，<code>selection.addRange(range)</code>将range添加到文本选中区，<code>selection.removeAllRanges()</code>为取消选中的文本。执行下面的代码会选中页面的第一个p元素。<br></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="string">"p"</span>);</span><br><span class="line"><span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line"><span class="keyword">var</span> range = <span class="built_in">document</span>.createRange();</span><br><span class="line">range.selectNodeContents(el);</span><br><span class="line">selection.addRange(range);</span><br></pre></td></tr></table></figure><p></p><h3 id="execCommand-方法允许运行命令来操纵可编辑内容区域的元素。"><a href="#execCommand-方法允许运行命令来操纵可编辑内容区域的元素。" class="headerlink" title="execCommand 方法允许运行命令来操纵可编辑内容区域的元素。"></a>execCommand 方法允许运行命令来操纵可编辑内容区域的元素。</h3><hr><p><code>bool = document.execCommand(aCommandName, aShowDefaultUI, aValueArgument);</code></p><ol><li>aCommandName: 一个 DOMString ，命令的名称。</li><li>aShowDefaultUI: 一个 Boolean， 是否展示用户界面，一般为 false。</li><li>aValueArgument: 一些命令（例如insertImage）需要额外的参数（insertImage需要提供插入image的url），默认为null。</li><li>返回值bool为布尔值，如果是 false 则表示操作不被支持或未被启用，执行<code>document.execCommand(&#39;Copy&#39;, &#39;false&#39;, null);</code>会复制页面选中的文本</li></ol><h3 id="示例（点击按钮复制p文本内容）"><a href="#示例（点击按钮复制p文本内容）" class="headerlink" title="示例（点击按钮复制p文本内容）"></a>示例（点击按钮复制p文本内容）</h3><hr><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 页面dom元素</span></span><br><span class="line">&lt;p&gt;aaa&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">&lt;button&gt;复制&lt;/</span>button&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// js代码</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">"button"</span>).onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="string">"p"</span>);</span><br><span class="line">    <span class="keyword">var</span> selection = <span class="built_in">window</span>.getSelection();</span><br><span class="line">    <span class="keyword">var</span> range = <span class="built_in">document</span>.createRange();</span><br><span class="line">    range.selectNodeContents(el);</span><br><span class="line">    selection.removeAllRanges();</span><br><span class="line">    selection.addRange(range);</span><br><span class="line">    <span class="built_in">document</span>.execCommand(<span class="string">'Copy'</span>, <span class="string">'false'</span>, <span class="literal">null</span>);</span><br><span class="line">    selection.removeAllRanges();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      通过js代码选中页面的dom元素，和复制页面选中的文本
    
    </summary>
    
      <category term="js" scheme="https://hsianglee.cn/categories/js/"/>
    
    
      <category term="js" scheme="https://hsianglee.cn/tags/js/"/>
    
  </entry>
  
</feed>
